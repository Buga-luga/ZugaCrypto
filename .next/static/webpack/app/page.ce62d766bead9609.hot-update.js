"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/priceFormat.ts":
/*!**********************************!*\
  !*** ./src/utils/priceFormat.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatPrice: function() { return /* binding */ formatPrice; },\n/* harmony export */   getChartPriceFormat: function() { return /* binding */ getChartPriceFormat; },\n/* harmony export */   getPriceFormatConfig: function() { return /* binding */ getPriceFormatConfig; },\n/* harmony export */   getScaleFormat: function() { return /* binding */ getScaleFormat; },\n/* harmony export */   isBTCPair: function() { return /* binding */ isBTCPair; }\n/* harmony export */ });\nconst DEFAULT_BTC_FORMAT = \"0.00000000\";\nconst DEFAULT_USDT_FORMAT = \"0.00\";\n// Single source of truth for checking if a pair is BTC-based\nconst isBTCPair = (baseToken)=>{\n    return baseToken.toUpperCase() === \"BTC\";\n};\nconst getPriceFormatConfig = (baseToken)=>{\n    const btcPair = isBTCPair(baseToken);\n    return {\n        precision: btcPair ? 8 : 2,\n        minMove: btcPair ? 0.00000001 : 0.01,\n        format: (price)=>{\n            if (typeof price !== \"number\" || isNaN(price)) {\n                return btcPair ? DEFAULT_BTC_FORMAT : DEFAULT_USDT_FORMAT;\n            }\n            return price.toFixed(btcPair ? 8 : 2);\n        }\n    };\n};\nconst getChartPriceFormat = (baseToken)=>{\n    const btcPair = isBTCPair(baseToken);\n    return {\n        type: \"custom\",\n        minMove: btcPair ? 0.00000001 : 0.01,\n        formatter: (price)=>{\n            if (typeof price !== \"number\" || isNaN(price)) {\n                return btcPair ? DEFAULT_BTC_FORMAT : DEFAULT_USDT_FORMAT;\n            }\n            return price.toFixed(btcPair ? 8 : 2);\n        }\n    };\n};\nconst getScaleFormat = (baseToken)=>{\n    const btcPair = isBTCPair(baseToken);\n    return {\n        type: \"custom\",\n        minMove: btcPair ? 0.00000001 : 0.01,\n        formatter: (price)=>{\n            if (typeof price !== \"number\" || isNaN(price)) {\n                return btcPair ? DEFAULT_BTC_FORMAT : DEFAULT_USDT_FORMAT;\n            }\n            return price.toFixed(btcPair ? 8 : 2);\n        }\n    };\n};\nconst formatPrice = (price, baseToken)=>{\n    const btcPair = isBTCPair(baseToken);\n    if (typeof price !== \"number\" || isNaN(price)) {\n        return btcPair ? DEFAULT_BTC_FORMAT : DEFAULT_USDT_FORMAT;\n    }\n    return price.toFixed(btcPair ? 8 : 2);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy9wcmljZUZvcm1hdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQU1BLE1BQU1BLHFCQUFxQjtBQUMzQixNQUFNQyxzQkFBc0I7QUFFNUIsNkRBQTZEO0FBQ3RELE1BQU1DLFlBQVksQ0FBQ0M7SUFDeEIsT0FBT0EsVUFBVUMsV0FBVyxPQUFPO0FBQ3JDLEVBQUU7QUFFSyxNQUFNQyx1QkFBdUIsQ0FBQ0Y7SUFDbkMsTUFBTUcsVUFBVUosVUFBVUM7SUFDMUIsT0FBTztRQUNMSSxXQUFXRCxVQUFVLElBQUk7UUFDekJFLFNBQVNGLFVBQVUsYUFBYTtRQUNoQ0csUUFBUSxDQUFDQztZQUNQLElBQUksT0FBT0EsVUFBVSxZQUFZQyxNQUFNRCxRQUFRO2dCQUM3QyxPQUFPSixVQUFVTixxQkFBcUJDO1lBQ3hDO1lBQ0EsT0FBT1MsTUFBTUUsT0FBTyxDQUFDTixVQUFVLElBQUk7UUFDckM7SUFDRjtBQUNGLEVBQUU7QUFFSyxNQUFNTyxzQkFBc0IsQ0FBQ1Y7SUFDbEMsTUFBTUcsVUFBVUosVUFBVUM7SUFDMUIsT0FBTztRQUNMVyxNQUFNO1FBQ05OLFNBQVNGLFVBQVUsYUFBYTtRQUNoQ1MsV0FBVyxDQUFDTDtZQUNWLElBQUksT0FBT0EsVUFBVSxZQUFZQyxNQUFNRCxRQUFRO2dCQUM3QyxPQUFPSixVQUFVTixxQkFBcUJDO1lBQ3hDO1lBQ0EsT0FBT1MsTUFBTUUsT0FBTyxDQUFDTixVQUFVLElBQUk7UUFDckM7SUFDRjtBQUNGLEVBQUU7QUFFSyxNQUFNVSxpQkFBaUIsQ0FBQ2I7SUFDN0IsTUFBTUcsVUFBVUosVUFBVUM7SUFDMUIsT0FBTztRQUNMVyxNQUFNO1FBQ05OLFNBQVNGLFVBQVUsYUFBYTtRQUNoQ1MsV0FBVyxDQUFDTDtZQUNWLElBQUksT0FBT0EsVUFBVSxZQUFZQyxNQUFNRCxRQUFRO2dCQUM3QyxPQUFPSixVQUFVTixxQkFBcUJDO1lBQ3hDO1lBQ0EsT0FBT1MsTUFBTUUsT0FBTyxDQUFDTixVQUFVLElBQUk7UUFDckM7SUFDRjtBQUNGLEVBQUU7QUFFSyxNQUFNVyxjQUFjLENBQUNQLE9BQWVQO0lBQ3pDLE1BQU1HLFVBQVVKLFVBQVVDO0lBQzFCLElBQUksT0FBT08sVUFBVSxZQUFZQyxNQUFNRCxRQUFRO1FBQzdDLE9BQU9KLFVBQVVOLHFCQUFxQkM7SUFDeEM7SUFDQSxPQUFPUyxNQUFNRSxPQUFPLENBQUNOLFVBQVUsSUFBSTtBQUNyQyxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy91dGlscy9wcmljZUZvcm1hdC50cz9kNWI3Il0sInNvdXJjZXNDb250ZW50IjpbImludGVyZmFjZSBQcmljZUZvcm1hdENvbmZpZyB7XHJcbiAgcHJlY2lzaW9uOiBudW1iZXI7XHJcbiAgbWluTW92ZTogbnVtYmVyO1xyXG4gIGZvcm1hdDogKHByaWNlOiBudW1iZXIpID0+IHN0cmluZztcclxufVxyXG5cclxuY29uc3QgREVGQVVMVF9CVENfRk9STUFUID0gJzAuMDAwMDAwMDAnO1xyXG5jb25zdCBERUZBVUxUX1VTRFRfRk9STUFUID0gJzAuMDAnO1xyXG5cclxuLy8gU2luZ2xlIHNvdXJjZSBvZiB0cnV0aCBmb3IgY2hlY2tpbmcgaWYgYSBwYWlyIGlzIEJUQy1iYXNlZFxyXG5leHBvcnQgY29uc3QgaXNCVENQYWlyID0gKGJhc2VUb2tlbjogc3RyaW5nKTogYm9vbGVhbiA9PiB7XHJcbiAgcmV0dXJuIGJhc2VUb2tlbi50b1VwcGVyQ2FzZSgpID09PSAnQlRDJztcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRQcmljZUZvcm1hdENvbmZpZyA9IChiYXNlVG9rZW46IHN0cmluZyk6IFByaWNlRm9ybWF0Q29uZmlnID0+IHtcclxuICBjb25zdCBidGNQYWlyID0gaXNCVENQYWlyKGJhc2VUb2tlbik7XHJcbiAgcmV0dXJuIHtcclxuICAgIHByZWNpc2lvbjogYnRjUGFpciA/IDggOiAyLFxyXG4gICAgbWluTW92ZTogYnRjUGFpciA/IDAuMDAwMDAwMDEgOiAwLjAxLFxyXG4gICAgZm9ybWF0OiAocHJpY2U6IG51bWJlcik6IHN0cmluZyA9PiB7XHJcbiAgICAgIGlmICh0eXBlb2YgcHJpY2UgIT09ICdudW1iZXInIHx8IGlzTmFOKHByaWNlKSkge1xyXG4gICAgICAgIHJldHVybiBidGNQYWlyID8gREVGQVVMVF9CVENfRk9STUFUIDogREVGQVVMVF9VU0RUX0ZPUk1BVDtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gcHJpY2UudG9GaXhlZChidGNQYWlyID8gOCA6IDIpO1xyXG4gICAgfVxyXG4gIH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0Q2hhcnRQcmljZUZvcm1hdCA9IChiYXNlVG9rZW46IHN0cmluZykgPT4ge1xyXG4gIGNvbnN0IGJ0Y1BhaXIgPSBpc0JUQ1BhaXIoYmFzZVRva2VuKTtcclxuICByZXR1cm4ge1xyXG4gICAgdHlwZTogJ2N1c3RvbScgYXMgY29uc3QsXHJcbiAgICBtaW5Nb3ZlOiBidGNQYWlyID8gMC4wMDAwMDAwMSA6IDAuMDEsXHJcbiAgICBmb3JtYXR0ZXI6IChwcmljZTogbnVtYmVyKTogc3RyaW5nID0+IHtcclxuICAgICAgaWYgKHR5cGVvZiBwcmljZSAhPT0gJ251bWJlcicgfHwgaXNOYU4ocHJpY2UpKSB7XHJcbiAgICAgICAgcmV0dXJuIGJ0Y1BhaXIgPyBERUZBVUxUX0JUQ19GT1JNQVQgOiBERUZBVUxUX1VTRFRfRk9STUFUO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBwcmljZS50b0ZpeGVkKGJ0Y1BhaXIgPyA4IDogMik7XHJcbiAgICB9XHJcbiAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRTY2FsZUZvcm1hdCA9IChiYXNlVG9rZW46IHN0cmluZykgPT4ge1xyXG4gIGNvbnN0IGJ0Y1BhaXIgPSBpc0JUQ1BhaXIoYmFzZVRva2VuKTtcclxuICByZXR1cm4ge1xyXG4gICAgdHlwZTogJ2N1c3RvbScgYXMgY29uc3QsXHJcbiAgICBtaW5Nb3ZlOiBidGNQYWlyID8gMC4wMDAwMDAwMSA6IDAuMDEsXHJcbiAgICBmb3JtYXR0ZXI6IChwcmljZTogbnVtYmVyKTogc3RyaW5nID0+IHtcclxuICAgICAgaWYgKHR5cGVvZiBwcmljZSAhPT0gJ251bWJlcicgfHwgaXNOYU4ocHJpY2UpKSB7XHJcbiAgICAgICAgcmV0dXJuIGJ0Y1BhaXIgPyBERUZBVUxUX0JUQ19GT1JNQVQgOiBERUZBVUxUX1VTRFRfRk9STUFUO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBwcmljZS50b0ZpeGVkKGJ0Y1BhaXIgPyA4IDogMik7XHJcbiAgICB9XHJcbiAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBmb3JtYXRQcmljZSA9IChwcmljZTogbnVtYmVyLCBiYXNlVG9rZW46IHN0cmluZyk6IHN0cmluZyA9PiB7XHJcbiAgY29uc3QgYnRjUGFpciA9IGlzQlRDUGFpcihiYXNlVG9rZW4pO1xyXG4gIGlmICh0eXBlb2YgcHJpY2UgIT09ICdudW1iZXInIHx8IGlzTmFOKHByaWNlKSkge1xyXG4gICAgcmV0dXJuIGJ0Y1BhaXIgPyBERUZBVUxUX0JUQ19GT1JNQVQgOiBERUZBVUxUX1VTRFRfRk9STUFUO1xyXG4gIH1cclxuICByZXR1cm4gcHJpY2UudG9GaXhlZChidGNQYWlyID8gOCA6IDIpO1xyXG59OyAiXSwibmFtZXMiOlsiREVGQVVMVF9CVENfRk9STUFUIiwiREVGQVVMVF9VU0RUX0ZPUk1BVCIsImlzQlRDUGFpciIsImJhc2VUb2tlbiIsInRvVXBwZXJDYXNlIiwiZ2V0UHJpY2VGb3JtYXRDb25maWciLCJidGNQYWlyIiwicHJlY2lzaW9uIiwibWluTW92ZSIsImZvcm1hdCIsInByaWNlIiwiaXNOYU4iLCJ0b0ZpeGVkIiwiZ2V0Q2hhcnRQcmljZUZvcm1hdCIsInR5cGUiLCJmb3JtYXR0ZXIiLCJnZXRTY2FsZUZvcm1hdCIsImZvcm1hdFByaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/priceFormat.ts\n"));

/***/ })

});