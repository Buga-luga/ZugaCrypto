"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/strategies/sma-crossover.ts":
/*!**************************************************!*\
  !*** ./src/services/strategies/sma-crossover.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   smaCrossoverStrategy: function() { return /* binding */ smaCrossoverStrategy; }\n/* harmony export */ });\n// Calculate Simple Moving Average (SMA)\nfunction calculateSMA(data, period) {\n    const sma = [];\n    // Fill initial values with NaN until we have enough data\n    for(let i = 0; i < period - 1; i++){\n        sma.push(NaN);\n    }\n    // Calculate SMA for each point after the initial period\n    for(let i = period - 1; i < data.length; i++){\n        let sum = 0;\n        for(let j = 0; j < period; j++){\n            sum += data[i - j];\n        }\n        sma.push(sum / period);\n    }\n    return sma;\n}\nconst smaCrossoverStrategy = {\n    id: \"sma_crossover\",\n    name: \"SMA Crossover\",\n    description: \"Fast SMA (9) crossing Slow SMA (21)\",\n    indicators: [\n        {\n            name: \"Fast SMA (9)\",\n            data: []\n        },\n        {\n            name: \"Slow SMA (21)\",\n            data: []\n        }\n    ],\n    analyze: (data)=>{\n        const prices = data.map((d)=>d.close);\n        const fastSMA = calculateSMA(prices, 9);\n        const slowSMA = calculateSMA(prices, 21);\n        // Need at least two points to detect a crossover\n        if (fastSMA.length < 2) return null;\n        const last = fastSMA.length - 1;\n        const prev = last - 1;\n        // Check for crossovers\n        if (!isNaN(fastSMA[prev]) && !isNaN(slowSMA[prev]) && !isNaN(fastSMA[last]) && !isNaN(slowSMA[last])) {\n            // Buy signal: Fast SMA crosses above Slow SMA\n            if (fastSMA[prev] <= slowSMA[prev] && fastSMA[last] > slowSMA[last]) {\n                return {\n                    type: \"buy\",\n                    price: data[last].close,\n                    time: data[last].time,\n                    message: \"Buy Signal: Fast SMA (\".concat(fastSMA[last].toFixed(2), \") crossed above Slow SMA (\").concat(slowSMA[last].toFixed(2), \")\")\n                };\n            }\n            // Sell signal: Fast SMA crosses below Slow SMA\n            if (fastSMA[prev] >= slowSMA[prev] && fastSMA[last] < slowSMA[last]) {\n                return {\n                    type: \"sell\",\n                    price: data[last].close,\n                    time: data[last].time,\n                    message: \"Sell Signal: Fast SMA (\".concat(fastSMA[last].toFixed(2), \") crossed below Slow SMA (\").concat(slowSMA[last].toFixed(2), \")\")\n                };\n            }\n        }\n        return null;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9zdHJhdGVnaWVzL3NtYS1jcm9zc292ZXIudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUVBLHdDQUF3QztBQUN4QyxTQUFTQSxhQUFhQyxJQUFjLEVBQUVDLE1BQWM7SUFDbEQsTUFBTUMsTUFBZ0IsRUFBRTtJQUV4Qix5REFBeUQ7SUFDekQsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlGLFNBQVMsR0FBR0UsSUFBSztRQUNuQ0QsSUFBSUUsSUFBSSxDQUFDQztJQUNYO0lBRUEsd0RBQXdEO0lBQ3hELElBQUssSUFBSUYsSUFBSUYsU0FBUyxHQUFHRSxJQUFJSCxLQUFLTSxNQUFNLEVBQUVILElBQUs7UUFDN0MsSUFBSUksTUFBTTtRQUNWLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJUCxRQUFRTyxJQUFLO1lBQy9CRCxPQUFPUCxJQUFJLENBQUNHLElBQUlLLEVBQUU7UUFDcEI7UUFDQU4sSUFBSUUsSUFBSSxDQUFDRyxNQUFNTjtJQUNqQjtJQUVBLE9BQU9DO0FBQ1Q7QUFFTyxNQUFNTyx1QkFBaUM7SUFDNUNDLElBQUk7SUFDSkMsTUFBTTtJQUNOQyxhQUFhO0lBQ2JDLFlBQVk7UUFDVjtZQUNFRixNQUFNO1lBQ05YLE1BQU0sRUFBRTtRQUNWO1FBQ0E7WUFDRVcsTUFBTTtZQUNOWCxNQUFNLEVBQUU7UUFDVjtLQUNEO0lBQ0RjLFNBQVMsQ0FBQ2Q7UUFDUixNQUFNZSxTQUFTZixLQUFLZ0IsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxLQUFLO1FBQ3BDLE1BQU1DLFVBQVVwQixhQUFhZ0IsUUFBUTtRQUNyQyxNQUFNSyxVQUFVckIsYUFBYWdCLFFBQVE7UUFFckMsaURBQWlEO1FBQ2pELElBQUlJLFFBQVFiLE1BQU0sR0FBRyxHQUFHLE9BQU87UUFFL0IsTUFBTWUsT0FBT0YsUUFBUWIsTUFBTSxHQUFHO1FBQzlCLE1BQU1nQixPQUFPRCxPQUFPO1FBRXBCLHVCQUF1QjtRQUN2QixJQUFJLENBQUNFLE1BQU1KLE9BQU8sQ0FBQ0csS0FBSyxLQUFLLENBQUNDLE1BQU1ILE9BQU8sQ0FBQ0UsS0FBSyxLQUM3QyxDQUFDQyxNQUFNSixPQUFPLENBQUNFLEtBQUssS0FBSyxDQUFDRSxNQUFNSCxPQUFPLENBQUNDLEtBQUssR0FBRztZQUVsRCw4Q0FBOEM7WUFDOUMsSUFBSUYsT0FBTyxDQUFDRyxLQUFLLElBQUlGLE9BQU8sQ0FBQ0UsS0FBSyxJQUFJSCxPQUFPLENBQUNFLEtBQUssR0FBR0QsT0FBTyxDQUFDQyxLQUFLLEVBQUU7Z0JBQ25FLE9BQU87b0JBQ0xHLE1BQU07b0JBQ05DLE9BQU96QixJQUFJLENBQUNxQixLQUFLLENBQUNILEtBQUs7b0JBQ3ZCUSxNQUFNMUIsSUFBSSxDQUFDcUIsS0FBSyxDQUFDSyxJQUFJO29CQUNyQkMsU0FBUyx5QkFBOEVQLE9BQXJERCxPQUFPLENBQUNFLEtBQUssQ0FBQ08sT0FBTyxDQUFDLElBQUcsOEJBQXFELE9BQXpCUixPQUFPLENBQUNDLEtBQUssQ0FBQ08sT0FBTyxDQUFDLElBQUc7Z0JBQ2xIO1lBQ0Y7WUFFQSwrQ0FBK0M7WUFDL0MsSUFBSVQsT0FBTyxDQUFDRyxLQUFLLElBQUlGLE9BQU8sQ0FBQ0UsS0FBSyxJQUFJSCxPQUFPLENBQUNFLEtBQUssR0FBR0QsT0FBTyxDQUFDQyxLQUFLLEVBQUU7Z0JBQ25FLE9BQU87b0JBQ0xHLE1BQU07b0JBQ05DLE9BQU96QixJQUFJLENBQUNxQixLQUFLLENBQUNILEtBQUs7b0JBQ3ZCUSxNQUFNMUIsSUFBSSxDQUFDcUIsS0FBSyxDQUFDSyxJQUFJO29CQUNyQkMsU0FBUywwQkFBK0VQLE9BQXJERCxPQUFPLENBQUNFLEtBQUssQ0FBQ08sT0FBTyxDQUFDLElBQUcsOEJBQXFELE9BQXpCUixPQUFPLENBQUNDLEtBQUssQ0FBQ08sT0FBTyxDQUFDLElBQUc7Z0JBQ25IO1lBQ0Y7UUFDRjtRQUVBLE9BQU87SUFDVDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3NlcnZpY2VzL3N0cmF0ZWdpZXMvc21hLWNyb3Nzb3Zlci50cz80N2E1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0cmF0ZWd5IH0gZnJvbSAnLi9pbmRleCc7XG5cbi8vIENhbGN1bGF0ZSBTaW1wbGUgTW92aW5nIEF2ZXJhZ2UgKFNNQSlcbmZ1bmN0aW9uIGNhbGN1bGF0ZVNNQShkYXRhOiBudW1iZXJbXSwgcGVyaW9kOiBudW1iZXIpOiBudW1iZXJbXSB7XG4gIGNvbnN0IHNtYTogbnVtYmVyW10gPSBbXTtcbiAgXG4gIC8vIEZpbGwgaW5pdGlhbCB2YWx1ZXMgd2l0aCBOYU4gdW50aWwgd2UgaGF2ZSBlbm91Z2ggZGF0YVxuICBmb3IgKGxldCBpID0gMDsgaSA8IHBlcmlvZCAtIDE7IGkrKykge1xuICAgIHNtYS5wdXNoKE5hTik7XG4gIH1cblxuICAvLyBDYWxjdWxhdGUgU01BIGZvciBlYWNoIHBvaW50IGFmdGVyIHRoZSBpbml0aWFsIHBlcmlvZFxuICBmb3IgKGxldCBpID0gcGVyaW9kIC0gMTsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcbiAgICBsZXQgc3VtID0gMDtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IHBlcmlvZDsgaisrKSB7XG4gICAgICBzdW0gKz0gZGF0YVtpIC0gal07XG4gICAgfVxuICAgIHNtYS5wdXNoKHN1bSAvIHBlcmlvZCk7XG4gIH1cblxuICByZXR1cm4gc21hO1xufVxuXG5leHBvcnQgY29uc3Qgc21hQ3Jvc3NvdmVyU3RyYXRlZ3k6IFN0cmF0ZWd5ID0ge1xuICBpZDogJ3NtYV9jcm9zc292ZXInLFxuICBuYW1lOiAnU01BIENyb3Nzb3ZlcicsXG4gIGRlc2NyaXB0aW9uOiAnRmFzdCBTTUEgKDkpIGNyb3NzaW5nIFNsb3cgU01BICgyMSknLFxuICBpbmRpY2F0b3JzOiBbXG4gICAge1xuICAgICAgbmFtZTogJ0Zhc3QgU01BICg5KScsXG4gICAgICBkYXRhOiBbXVxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogJ1Nsb3cgU01BICgyMSknLFxuICAgICAgZGF0YTogW11cbiAgICB9XG4gIF0sXG4gIGFuYWx5emU6IChkYXRhKSA9PiB7XG4gICAgY29uc3QgcHJpY2VzID0gZGF0YS5tYXAoZCA9PiBkLmNsb3NlKTtcbiAgICBjb25zdCBmYXN0U01BID0gY2FsY3VsYXRlU01BKHByaWNlcywgOSk7XG4gICAgY29uc3Qgc2xvd1NNQSA9IGNhbGN1bGF0ZVNNQShwcmljZXMsIDIxKTtcblxuICAgIC8vIE5lZWQgYXQgbGVhc3QgdHdvIHBvaW50cyB0byBkZXRlY3QgYSBjcm9zc292ZXJcbiAgICBpZiAoZmFzdFNNQS5sZW5ndGggPCAyKSByZXR1cm4gbnVsbDtcblxuICAgIGNvbnN0IGxhc3QgPSBmYXN0U01BLmxlbmd0aCAtIDE7XG4gICAgY29uc3QgcHJldiA9IGxhc3QgLSAxO1xuXG4gICAgLy8gQ2hlY2sgZm9yIGNyb3Nzb3ZlcnNcbiAgICBpZiAoIWlzTmFOKGZhc3RTTUFbcHJldl0pICYmICFpc05hTihzbG93U01BW3ByZXZdKSAmJiBcbiAgICAgICAgIWlzTmFOKGZhc3RTTUFbbGFzdF0pICYmICFpc05hTihzbG93U01BW2xhc3RdKSkge1xuICAgICAgXG4gICAgICAvLyBCdXkgc2lnbmFsOiBGYXN0IFNNQSBjcm9zc2VzIGFib3ZlIFNsb3cgU01BXG4gICAgICBpZiAoZmFzdFNNQVtwcmV2XSA8PSBzbG93U01BW3ByZXZdICYmIGZhc3RTTUFbbGFzdF0gPiBzbG93U01BW2xhc3RdKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdHlwZTogJ2J1eScsXG4gICAgICAgICAgcHJpY2U6IGRhdGFbbGFzdF0uY2xvc2UsXG4gICAgICAgICAgdGltZTogZGF0YVtsYXN0XS50aW1lLFxuICAgICAgICAgIG1lc3NhZ2U6IGBCdXkgU2lnbmFsOiBGYXN0IFNNQSAoJHtmYXN0U01BW2xhc3RdLnRvRml4ZWQoMil9KSBjcm9zc2VkIGFib3ZlIFNsb3cgU01BICgke3Nsb3dTTUFbbGFzdF0udG9GaXhlZCgyKX0pYFxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBTZWxsIHNpZ25hbDogRmFzdCBTTUEgY3Jvc3NlcyBiZWxvdyBTbG93IFNNQVxuICAgICAgaWYgKGZhc3RTTUFbcHJldl0gPj0gc2xvd1NNQVtwcmV2XSAmJiBmYXN0U01BW2xhc3RdIDwgc2xvd1NNQVtsYXN0XSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHR5cGU6ICdzZWxsJyxcbiAgICAgICAgICBwcmljZTogZGF0YVtsYXN0XS5jbG9zZSxcbiAgICAgICAgICB0aW1lOiBkYXRhW2xhc3RdLnRpbWUsXG4gICAgICAgICAgbWVzc2FnZTogYFNlbGwgU2lnbmFsOiBGYXN0IFNNQSAoJHtmYXN0U01BW2xhc3RdLnRvRml4ZWQoMil9KSBjcm9zc2VkIGJlbG93IFNsb3cgU01BICgke3Nsb3dTTUFbbGFzdF0udG9GaXhlZCgyKX0pYFxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG59OyAiXSwibmFtZXMiOlsiY2FsY3VsYXRlU01BIiwiZGF0YSIsInBlcmlvZCIsInNtYSIsImkiLCJwdXNoIiwiTmFOIiwibGVuZ3RoIiwic3VtIiwiaiIsInNtYUNyb3Nzb3ZlclN0cmF0ZWd5IiwiaWQiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJpbmRpY2F0b3JzIiwiYW5hbHl6ZSIsInByaWNlcyIsIm1hcCIsImQiLCJjbG9zZSIsImZhc3RTTUEiLCJzbG93U01BIiwibGFzdCIsInByZXYiLCJpc05hTiIsInR5cGUiLCJwcmljZSIsInRpbWUiLCJtZXNzYWdlIiwidG9GaXhlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/strategies/sma-crossover.ts\n"));

/***/ })

});