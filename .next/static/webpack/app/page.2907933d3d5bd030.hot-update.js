"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/strategies/sma-crossover.ts":
/*!**************************************************!*\
  !*** ./src/services/strategies/sma-crossover.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   smaCrossoverStrategy: function() { return /* binding */ smaCrossoverStrategy; }\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"(app-pages-browser)/./src/services/strategies/index.ts\");\n\n// Calculate Simple Moving Average (SMA)\nfunction calculateSMA(data, period) {\n    const sma = [];\n    // Fill initial values with NaN until we have enough data\n    for(let i = 0; i < period - 1; i++){\n        sma.push(NaN);\n    }\n    // Calculate SMA for each point after the initial period\n    for(let i = period - 1; i < data.length; i++){\n        let sum = 0;\n        for(let j = 0; j < period; j++){\n            sum += data[i - j];\n        }\n        sma.push(sum / period);\n    }\n    return sma;\n}\n// Convert any time format to Unix timestamp\nfunction getUnixTime(time) {\n    if (typeof time === \"number\") {\n        return time;\n    }\n    if (typeof time === \"string\") {\n        return Math.floor(new Date(time).getTime() / 1000);\n    }\n    // Handle BusinessDay format\n    const { year, month, day } = time;\n    return Math.floor(new Date(year, month - 1, day).getTime() / 1000);\n}\nconst smaCrossoverStrategy = {\n    id: \"sma_crossover\",\n    name: \"SMA Crossover\",\n    description: \"Fast SMA (9) crossing Slow SMA (21)\",\n    indicators: [\n        {\n            name: \"Fast SMA (9)\",\n            data: []\n        },\n        {\n            name: \"Slow SMA (21)\",\n            data: []\n        }\n    ],\n    analyze: (data)=>{\n        const prices = data.map((d)=>d.close);\n        const fastSMA = calculateSMA(prices, 9);\n        const slowSMA = calculateSMA(prices, 21);\n        // Need at least two points to detect a crossover\n        if (fastSMA.length < 2) return null;\n        const last = fastSMA.length - 1;\n        const prev = last - 1;\n        // Check for crossovers\n        if (!isNaN(fastSMA[prev]) && !isNaN(slowSMA[prev]) && !isNaN(fastSMA[last]) && !isNaN(slowSMA[last])) {\n            // Buy signal: Fast SMA crosses above Slow SMA\n            if (fastSMA[prev] <= slowSMA[prev] && fastSMA[last] > slowSMA[last]) {\n                return {\n                    type: \"buy\",\n                    price: data[last].close,\n                    time: getUnixTime(data[last].time),\n                    message: \"Buy Signal: Fast SMA (\".concat(fastSMA[last].toFixed(2), \") crossed above Slow SMA (\").concat(slowSMA[last].toFixed(2), \")\")\n                };\n            }\n            // Sell signal: Fast SMA crosses below Slow SMA\n            if (fastSMA[prev] >= slowSMA[prev] && fastSMA[last] < slowSMA[last]) {\n                return {\n                    type: \"sell\",\n                    price: data[last].close,\n                    time: getUnixTime(data[last].time),\n                    message: \"Sell Signal: Fast SMA (\".concat(fastSMA[last].toFixed(2), \") crossed below Slow SMA (\").concat(slowSMA[last].toFixed(2), \")\")\n                };\n            }\n        }\n        return null;\n    }\n};\n// Register the strategy\n(0,_index__WEBPACK_IMPORTED_MODULE_0__.registerStrategy)(smaCrossoverStrategy);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9zdHJhdGVnaWVzL3NtYS1jcm9zc292ZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUU7QUFHckUsd0NBQXdDO0FBQ3hDLFNBQVNDLGFBQWFDLElBQWMsRUFBRUMsTUFBYztJQUNsRCxNQUFNQyxNQUFnQixFQUFFO0lBRXhCLHlEQUF5RDtJQUN6RCxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUYsU0FBUyxHQUFHRSxJQUFLO1FBQ25DRCxJQUFJRSxJQUFJLENBQUNDO0lBQ1g7SUFFQSx3REFBd0Q7SUFDeEQsSUFBSyxJQUFJRixJQUFJRixTQUFTLEdBQUdFLElBQUlILEtBQUtNLE1BQU0sRUFBRUgsSUFBSztRQUM3QyxJQUFJSSxNQUFNO1FBQ1YsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlQLFFBQVFPLElBQUs7WUFDL0JELE9BQU9QLElBQUksQ0FBQ0csSUFBSUssRUFBRTtRQUNwQjtRQUNBTixJQUFJRSxJQUFJLENBQUNHLE1BQU1OO0lBQ2pCO0lBRUEsT0FBT0M7QUFDVDtBQUVBLDRDQUE0QztBQUM1QyxTQUFTTyxZQUFZQyxJQUFVO0lBQzdCLElBQUksT0FBT0EsU0FBUyxVQUFVO1FBQzVCLE9BQU9BO0lBQ1Q7SUFDQSxJQUFJLE9BQU9BLFNBQVMsVUFBVTtRQUM1QixPQUFPQyxLQUFLQyxLQUFLLENBQUMsSUFBSUMsS0FBS0gsTUFBTUksT0FBTyxLQUFLO0lBQy9DO0lBQ0EsNEJBQTRCO0lBQzVCLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUVDLEdBQUcsRUFBRSxHQUFHUDtJQUM3QixPQUFPQyxLQUFLQyxLQUFLLENBQUMsSUFBSUMsS0FBS0UsTUFBTUMsUUFBUSxHQUFHQyxLQUFLSCxPQUFPLEtBQUs7QUFDL0Q7QUFFTyxNQUFNSSx1QkFBaUM7SUFDNUNDLElBQUk7SUFDSkMsTUFBTTtJQUNOQyxhQUFhO0lBQ2JDLFlBQVk7UUFDVjtZQUNFRixNQUFNO1lBQ05wQixNQUFNLEVBQUU7UUFDVjtRQUNBO1lBQ0VvQixNQUFNO1lBQ05wQixNQUFNLEVBQUU7UUFDVjtLQUNEO0lBQ0R1QixTQUFTLENBQUN2QjtRQUNSLE1BQU13QixTQUFTeEIsS0FBS3lCLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUMsS0FBSztRQUNwQyxNQUFNQyxVQUFVN0IsYUFBYXlCLFFBQVE7UUFDckMsTUFBTUssVUFBVTlCLGFBQWF5QixRQUFRO1FBRXJDLGlEQUFpRDtRQUNqRCxJQUFJSSxRQUFRdEIsTUFBTSxHQUFHLEdBQUcsT0FBTztRQUUvQixNQUFNd0IsT0FBT0YsUUFBUXRCLE1BQU0sR0FBRztRQUM5QixNQUFNeUIsT0FBT0QsT0FBTztRQUVwQix1QkFBdUI7UUFDdkIsSUFBSSxDQUFDRSxNQUFNSixPQUFPLENBQUNHLEtBQUssS0FBSyxDQUFDQyxNQUFNSCxPQUFPLENBQUNFLEtBQUssS0FDN0MsQ0FBQ0MsTUFBTUosT0FBTyxDQUFDRSxLQUFLLEtBQUssQ0FBQ0UsTUFBTUgsT0FBTyxDQUFDQyxLQUFLLEdBQUc7WUFFbEQsOENBQThDO1lBQzlDLElBQUlGLE9BQU8sQ0FBQ0csS0FBSyxJQUFJRixPQUFPLENBQUNFLEtBQUssSUFBSUgsT0FBTyxDQUFDRSxLQUFLLEdBQUdELE9BQU8sQ0FBQ0MsS0FBSyxFQUFFO2dCQUNuRSxPQUFPO29CQUNMRyxNQUFNO29CQUNOQyxPQUFPbEMsSUFBSSxDQUFDOEIsS0FBSyxDQUFDSCxLQUFLO29CQUN2QmpCLE1BQU1ELFlBQVlULElBQUksQ0FBQzhCLEtBQUssQ0FBQ3BCLElBQUk7b0JBQ2pDeUIsU0FBUyx5QkFBOEVOLE9BQXJERCxPQUFPLENBQUNFLEtBQUssQ0FBQ00sT0FBTyxDQUFDLElBQUcsOEJBQXFELE9BQXpCUCxPQUFPLENBQUNDLEtBQUssQ0FBQ00sT0FBTyxDQUFDLElBQUc7Z0JBQ2xIO1lBQ0Y7WUFFQSwrQ0FBK0M7WUFDL0MsSUFBSVIsT0FBTyxDQUFDRyxLQUFLLElBQUlGLE9BQU8sQ0FBQ0UsS0FBSyxJQUFJSCxPQUFPLENBQUNFLEtBQUssR0FBR0QsT0FBTyxDQUFDQyxLQUFLLEVBQUU7Z0JBQ25FLE9BQU87b0JBQ0xHLE1BQU07b0JBQ05DLE9BQU9sQyxJQUFJLENBQUM4QixLQUFLLENBQUNILEtBQUs7b0JBQ3ZCakIsTUFBTUQsWUFBWVQsSUFBSSxDQUFDOEIsS0FBSyxDQUFDcEIsSUFBSTtvQkFDakN5QixTQUFTLDBCQUErRU4sT0FBckRELE9BQU8sQ0FBQ0UsS0FBSyxDQUFDTSxPQUFPLENBQUMsSUFBRyw4QkFBcUQsT0FBekJQLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDTSxPQUFPLENBQUMsSUFBRztnQkFDbkg7WUFDRjtRQUNGO1FBRUEsT0FBTztJQUNUO0FBQ0YsRUFBRTtBQUVGLHdCQUF3QjtBQUN4QnRDLHdEQUFnQkEsQ0FBQ29CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zZXJ2aWNlcy9zdHJhdGVnaWVzL3NtYS1jcm9zc292ZXIudHM/NDdhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdHJhdGVneSwgU3RyYXRlZ3lTaWduYWwsIHJlZ2lzdGVyU3RyYXRlZ3kgfSBmcm9tICcuL2luZGV4JztcbmltcG9ydCB7IFRpbWUsIEJ1c2luZXNzRGF5IH0gZnJvbSAnbGlnaHR3ZWlnaHQtY2hhcnRzJztcblxuLy8gQ2FsY3VsYXRlIFNpbXBsZSBNb3ZpbmcgQXZlcmFnZSAoU01BKVxuZnVuY3Rpb24gY2FsY3VsYXRlU01BKGRhdGE6IG51bWJlcltdLCBwZXJpb2Q6IG51bWJlcik6IG51bWJlcltdIHtcbiAgY29uc3Qgc21hOiBudW1iZXJbXSA9IFtdO1xuICBcbiAgLy8gRmlsbCBpbml0aWFsIHZhbHVlcyB3aXRoIE5hTiB1bnRpbCB3ZSBoYXZlIGVub3VnaCBkYXRhXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcGVyaW9kIC0gMTsgaSsrKSB7XG4gICAgc21hLnB1c2goTmFOKTtcbiAgfVxuXG4gIC8vIENhbGN1bGF0ZSBTTUEgZm9yIGVhY2ggcG9pbnQgYWZ0ZXIgdGhlIGluaXRpYWwgcGVyaW9kXG4gIGZvciAobGV0IGkgPSBwZXJpb2QgLSAxOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgIGxldCBzdW0gPSAwO1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgcGVyaW9kOyBqKyspIHtcbiAgICAgIHN1bSArPSBkYXRhW2kgLSBqXTtcbiAgICB9XG4gICAgc21hLnB1c2goc3VtIC8gcGVyaW9kKTtcbiAgfVxuXG4gIHJldHVybiBzbWE7XG59XG5cbi8vIENvbnZlcnQgYW55IHRpbWUgZm9ybWF0IHRvIFVuaXggdGltZXN0YW1wXG5mdW5jdGlvbiBnZXRVbml4VGltZSh0aW1lOiBUaW1lKTogbnVtYmVyIHtcbiAgaWYgKHR5cGVvZiB0aW1lID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiB0aW1lO1xuICB9XG4gIGlmICh0eXBlb2YgdGltZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihuZXcgRGF0ZSh0aW1lKS5nZXRUaW1lKCkgLyAxMDAwKTtcbiAgfVxuICAvLyBIYW5kbGUgQnVzaW5lc3NEYXkgZm9ybWF0XG4gIGNvbnN0IHsgeWVhciwgbW9udGgsIGRheSB9ID0gdGltZSBhcyBCdXNpbmVzc0RheTtcbiAgcmV0dXJuIE1hdGguZmxvb3IobmV3IERhdGUoeWVhciwgbW9udGggLSAxLCBkYXkpLmdldFRpbWUoKSAvIDEwMDApO1xufVxuXG5leHBvcnQgY29uc3Qgc21hQ3Jvc3NvdmVyU3RyYXRlZ3k6IFN0cmF0ZWd5ID0ge1xuICBpZDogJ3NtYV9jcm9zc292ZXInLFxuICBuYW1lOiAnU01BIENyb3Nzb3ZlcicsXG4gIGRlc2NyaXB0aW9uOiAnRmFzdCBTTUEgKDkpIGNyb3NzaW5nIFNsb3cgU01BICgyMSknLFxuICBpbmRpY2F0b3JzOiBbXG4gICAge1xuICAgICAgbmFtZTogJ0Zhc3QgU01BICg5KScsXG4gICAgICBkYXRhOiBbXVxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogJ1Nsb3cgU01BICgyMSknLFxuICAgICAgZGF0YTogW11cbiAgICB9XG4gIF0sXG4gIGFuYWx5emU6IChkYXRhKSA9PiB7XG4gICAgY29uc3QgcHJpY2VzID0gZGF0YS5tYXAoZCA9PiBkLmNsb3NlKTtcbiAgICBjb25zdCBmYXN0U01BID0gY2FsY3VsYXRlU01BKHByaWNlcywgOSk7XG4gICAgY29uc3Qgc2xvd1NNQSA9IGNhbGN1bGF0ZVNNQShwcmljZXMsIDIxKTtcblxuICAgIC8vIE5lZWQgYXQgbGVhc3QgdHdvIHBvaW50cyB0byBkZXRlY3QgYSBjcm9zc292ZXJcbiAgICBpZiAoZmFzdFNNQS5sZW5ndGggPCAyKSByZXR1cm4gbnVsbDtcblxuICAgIGNvbnN0IGxhc3QgPSBmYXN0U01BLmxlbmd0aCAtIDE7XG4gICAgY29uc3QgcHJldiA9IGxhc3QgLSAxO1xuXG4gICAgLy8gQ2hlY2sgZm9yIGNyb3Nzb3ZlcnNcbiAgICBpZiAoIWlzTmFOKGZhc3RTTUFbcHJldl0pICYmICFpc05hTihzbG93U01BW3ByZXZdKSAmJiBcbiAgICAgICAgIWlzTmFOKGZhc3RTTUFbbGFzdF0pICYmICFpc05hTihzbG93U01BW2xhc3RdKSkge1xuICAgICAgXG4gICAgICAvLyBCdXkgc2lnbmFsOiBGYXN0IFNNQSBjcm9zc2VzIGFib3ZlIFNsb3cgU01BXG4gICAgICBpZiAoZmFzdFNNQVtwcmV2XSA8PSBzbG93U01BW3ByZXZdICYmIGZhc3RTTUFbbGFzdF0gPiBzbG93U01BW2xhc3RdKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdHlwZTogJ2J1eScsXG4gICAgICAgICAgcHJpY2U6IGRhdGFbbGFzdF0uY2xvc2UsXG4gICAgICAgICAgdGltZTogZ2V0VW5peFRpbWUoZGF0YVtsYXN0XS50aW1lKSxcbiAgICAgICAgICBtZXNzYWdlOiBgQnV5IFNpZ25hbDogRmFzdCBTTUEgKCR7ZmFzdFNNQVtsYXN0XS50b0ZpeGVkKDIpfSkgY3Jvc3NlZCBhYm92ZSBTbG93IFNNQSAoJHtzbG93U01BW2xhc3RdLnRvRml4ZWQoMil9KWBcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gU2VsbCBzaWduYWw6IEZhc3QgU01BIGNyb3NzZXMgYmVsb3cgU2xvdyBTTUFcbiAgICAgIGlmIChmYXN0U01BW3ByZXZdID49IHNsb3dTTUFbcHJldl0gJiYgZmFzdFNNQVtsYXN0XSA8IHNsb3dTTUFbbGFzdF0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0eXBlOiAnc2VsbCcsXG4gICAgICAgICAgcHJpY2U6IGRhdGFbbGFzdF0uY2xvc2UsXG4gICAgICAgICAgdGltZTogZ2V0VW5peFRpbWUoZGF0YVtsYXN0XS50aW1lKSxcbiAgICAgICAgICBtZXNzYWdlOiBgU2VsbCBTaWduYWw6IEZhc3QgU01BICgke2Zhc3RTTUFbbGFzdF0udG9GaXhlZCgyKX0pIGNyb3NzZWQgYmVsb3cgU2xvdyBTTUEgKCR7c2xvd1NNQVtsYXN0XS50b0ZpeGVkKDIpfSlgXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn07XG5cbi8vIFJlZ2lzdGVyIHRoZSBzdHJhdGVneVxucmVnaXN0ZXJTdHJhdGVneShzbWFDcm9zc292ZXJTdHJhdGVneSk7ICJdLCJuYW1lcyI6WyJyZWdpc3RlclN0cmF0ZWd5IiwiY2FsY3VsYXRlU01BIiwiZGF0YSIsInBlcmlvZCIsInNtYSIsImkiLCJwdXNoIiwiTmFOIiwibGVuZ3RoIiwic3VtIiwiaiIsImdldFVuaXhUaW1lIiwidGltZSIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJnZXRUaW1lIiwieWVhciIsIm1vbnRoIiwiZGF5Iiwic21hQ3Jvc3NvdmVyU3RyYXRlZ3kiLCJpZCIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImluZGljYXRvcnMiLCJhbmFseXplIiwicHJpY2VzIiwibWFwIiwiZCIsImNsb3NlIiwiZmFzdFNNQSIsInNsb3dTTUEiLCJsYXN0IiwicHJldiIsImlzTmFOIiwidHlwZSIsInByaWNlIiwibWVzc2FnZSIsInRvRml4ZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/strategies/sma-crossover.ts\n"));

/***/ })

});