"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/Chart/CandlestickChart.tsx":
/*!***************************************************!*\
  !*** ./src/components/Chart/CandlestickChart.tsx ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CandlestickChart: function() { return /* binding */ CandlestickChart; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lightweight_charts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightweight-charts */ \"(app-pages-browser)/./node_modules/lightweight-charts/dist/lightweight-charts.development.mjs\");\n/* harmony import */ var _services_api_cryptoCompareAPI__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/services/api/cryptoCompareAPI */ \"(app-pages-browser)/./src/services/api/cryptoCompareAPI.ts\");\n/* harmony import */ var _services_strategies__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/services/strategies */ \"(app-pages-browser)/./src/services/strategies/index.ts\");\n/* harmony import */ var _services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/services/strategies/moving-averages */ \"(app-pages-browser)/./src/services/strategies/moving-averages.ts\");\n/* harmony import */ var _TickerHeader__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TickerHeader */ \"(app-pages-browser)/./src/components/Chart/TickerHeader.tsx\");\n/* __next_internal_client_entry_do_not_use__ CandlestickChart auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction CandlestickChart(param) {\n    let { timeframe, strategy, token, exchange: initialExchange } = param;\n    _s();\n    const [exchange, setExchange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialExchange);\n    const [currentPrice, setCurrentPrice] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"Loading...\");\n    const [priceStats, setPriceStats] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        change24h: \"—\",\n        high24h: \"—\",\n        low24h: \"—\"\n    });\n    const chartContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const candlestickSeriesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const indicatorSeriesRefs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Map());\n    const markerSeriesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const historicalDataRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const currentCandleRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const lastSignalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Function to get interval in seconds\n    const getIntervalSeconds = (tf)=>{\n        switch(tf){\n            case \"1m\":\n                return 60;\n            case \"5m\":\n                return 300;\n            case \"15m\":\n                return 900;\n            case \"30m\":\n                return 1800;\n            case \"1h\":\n                return 3600;\n            case \"4h\":\n                return 14400;\n            case \"1d\":\n                return 86400;\n            default:\n                return 60;\n        }\n    };\n    // Function to safely remove a series\n    const safelyRemoveSeries = (chart, series)=>{\n        try {\n            if (series && chart) {\n                chart.removeSeries(series);\n            }\n        } catch (e) {\n            console.error(\"Error removing series:\", e);\n        }\n    };\n    // Function to check for crossover signals\n    const checkForSignal = (prevFast, prevSlow, currFast, currSlow, candle, data)=>{\n        if (!isNaN(prevFast) && !isNaN(prevSlow) && !isNaN(currFast) && !isNaN(currSlow)) {\n            if (strategy === \"macd_crossover\") {\n                // For MACD, we want signals based on histogram crossovers\n                const prevHistogram = prevFast - prevSlow;\n                const currHistogram = currFast - currSlow;\n                // Buy signal: Histogram crosses above zero\n                if (prevHistogram <= 0 && currHistogram > 0) {\n                    return {\n                        time: candle.time,\n                        position: \"belowBar\",\n                        color: \"#26a69a\",\n                        shape: \"arrowUp\",\n                        text: \"Buy \".concat(candle.close.toFixed(2)),\n                        size: 2,\n                        value: candle.low * 0.999\n                    };\n                } else if (prevHistogram >= 0 && currHistogram < 0) {\n                    return {\n                        time: candle.time,\n                        position: \"aboveBar\",\n                        color: \"#ef5350\",\n                        shape: \"arrowDown\",\n                        text: \"Sell \".concat(candle.close.toFixed(2)),\n                        size: 2,\n                        value: candle.high * 1.001\n                    };\n                }\n            } else {\n                // Calculate average price and range for better positioning\n                const avgPrice = data.reduce((sum, d)=>sum + d.close, 0) / data.length;\n                const priceRange = data.reduce((range, d)=>Math.max(range, Math.abs(d.high - d.low)), 0);\n                const offset = priceRange * 0.75;\n                // Buy signal: Fast crosses above Slow\n                if (prevFast <= prevSlow && currFast > currSlow) {\n                    return {\n                        time: candle.time,\n                        position: \"belowBar\",\n                        color: \"#26a69a\",\n                        shape: \"arrowUp\",\n                        text: \"Buy \".concat(candle.close.toFixed(2)),\n                        size: 2,\n                        value: Math.min(...data.slice(-10).map((d)=>d.low)) - offset\n                    };\n                } else if (prevFast >= prevSlow && currFast < currSlow) {\n                    return {\n                        time: candle.time,\n                        position: \"aboveBar\",\n                        color: \"#ef5350\",\n                        shape: \"arrowDown\",\n                        text: \"Sell \".concat(candle.close.toFixed(2)),\n                        size: 2,\n                        value: Math.max(...data.slice(-10).map((d)=>d.high)) + offset\n                    };\n                }\n            }\n        }\n        return null;\n    };\n    // Function to get histogram scale factor based on timeframe\n    const getHistogramScaleFactor = (tf, maxHistogram)=>{\n        if (maxHistogram === 0) return 1;\n        switch(tf){\n            case \"1h\":\n            case \"4h\":\n            case \"1d\":\n            case \"1w\":\n                return 100 / maxHistogram; // Much larger scaling for higher timeframes\n            default:\n                return 20 / maxHistogram; // Original scaling for lower timeframes\n        }\n    };\n    // Function to add strategy indicators\n    const addStrategyIndicators = (chart, data)=>{\n        console.log(\"Adding strategy indicators\");\n        // Clear any existing indicators\n        indicatorSeriesRefs.current.forEach((series)=>safelyRemoveSeries(chart, series));\n        indicatorSeriesRefs.current.clear();\n        if (markerSeriesRef.current) {\n            safelyRemoveSeries(chart, markerSeriesRef.current);\n            markerSeriesRef.current = null;\n        }\n        if (strategy === \"none\") return;\n        // Ensure data is sorted and deduplicated by time\n        const uniqueData = Array.from(new Map(data.map((item)=>[\n                item.time,\n                item\n            ])).values()).sort((a, b)=>a.time - b.time);\n        const prices = uniqueData.map((d)=>d.close);\n        let fastLine = [];\n        let slowLine = [];\n        let histogramData = [];\n        // Calculate indicators based on strategy type\n        if (strategy === \"macd_crossover\") {\n            const macdData = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateMACD)(prices);\n            fastLine = macdData.macd;\n            slowLine = macdData.signal;\n            histogramData = macdData.histogram;\n        } else {\n            switch(strategy){\n                case \"ema_crossover\":\n                    fastLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateEMA)(prices, 9);\n                    slowLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateEMA)(prices, 21);\n                    break;\n                case \"sma_crossover\":\n                    fastLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateSMA)(prices, 9);\n                    slowLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateSMA)(prices, 21);\n                    break;\n                case \"tema_crossover\":\n                    fastLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateTEMA)(prices, 7);\n                    slowLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateTEMA)(prices, 21);\n                    break;\n                case \"golden_cross\":\n                    fastLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateSMA)(prices, 50);\n                    slowLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateSMA)(prices, 200);\n                    break;\n                case \"hull_crossover\":\n                    fastLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateHMA)(prices, 9);\n                    slowLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateHMA)(prices, 21);\n                    break;\n                case \"ema_5_13\":\n                    fastLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateEMA)(prices, 5);\n                    slowLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateEMA)(prices, 13);\n                    break;\n            }\n        }\n        // Add indicator lines\n        const selectedStrategy = (0,_services_strategies__WEBPACK_IMPORTED_MODULE_4__.getStrategy)(strategy);\n        if (!selectedStrategy) return;\n        if (strategy === \"macd_crossover\") {\n            // Create MACD series with separate price scale\n            const macdSeries = chart.addLineSeries({\n                color: \"#2962FF\",\n                lineWidth: 2,\n                title: \"MACD\",\n                priceFormat: {\n                    type: \"price\",\n                    precision: 2,\n                    minMove: 0.01\n                },\n                priceScaleId: \"overlay\"\n            });\n            const signalSeries = chart.addLineSeries({\n                color: \"#FF6B6B\",\n                lineWidth: 2,\n                title: \"Signal\",\n                priceFormat: {\n                    type: \"price\",\n                    precision: 2,\n                    minMove: 0.01\n                },\n                priceScaleId: \"overlay\"\n            });\n            const histogramSeries = chart.addHistogramSeries({\n                color: \"#26a69a\",\n                title: \"Histogram\",\n                priceFormat: {\n                    type: \"price\",\n                    precision: 2,\n                    minMove: 0.01\n                },\n                priceScaleId: \"overlay\",\n                base: 0\n            });\n            // Configure the price scale for MACD\n            const macdScale = chart.priceScale(\"overlay\");\n            if (macdScale) {\n                macdScale.applyOptions({\n                    scaleMargins: {\n                        top: 0.7,\n                        bottom: 0.1\n                    },\n                    visible: true,\n                    borderVisible: true\n                });\n            }\n            indicatorSeriesRefs.current.set(\"MACD\", macdSeries);\n            indicatorSeriesRefs.current.set(\"Signal\", signalSeries);\n            indicatorSeriesRefs.current.set(\"Histogram\", histogramSeries);\n            // Set data for each series\n            const macdLineData = fastLine.map((value, idx)=>({\n                    time: uniqueData[idx].time,\n                    value: isNaN(value) ? null : value\n                })).filter((d)=>d.value !== null);\n            const signalLineData = slowLine.map((value, idx)=>({\n                    time: uniqueData[idx].time,\n                    value: isNaN(value) ? null : value\n                })).filter((d)=>d.value !== null);\n            // Scale histogram values with dynamic scaling\n            const maxHistogram = Math.max(...histogramData.map(Math.abs));\n            const scaleFactor = getHistogramScaleFactor(timeframe, maxHistogram);\n            const histogramSeriesData = histogramData.map((value, idx)=>({\n                    time: uniqueData[idx].time,\n                    value: isNaN(value) ? null : value * scaleFactor,\n                    color: value >= 0 ? \"#26a69a\" : \"#ef5350\"\n                })).filter((d)=>d.value !== null);\n            macdSeries.setData(macdLineData);\n            signalSeries.setData(signalLineData);\n            histogramSeries.setData(histogramSeriesData);\n            // Also update the real-time update scaling factor\n            if (macdSeries && signalSeries && histogramSeries) {\n                const lastMACD = {\n                    time: uniqueData[uniqueData.length - 1].time,\n                    value: fastLine[fastLine.length - 1]\n                };\n                const lastSignal = {\n                    time: uniqueData[uniqueData.length - 1].time,\n                    value: slowLine[slowLine.length - 1]\n                };\n                const lastHistogram = {\n                    time: uniqueData[uniqueData.length - 1].time,\n                    value: histogramData[histogramData.length - 1] * scaleFactor,\n                    color: histogramData[histogramData.length - 1] >= 0 ? \"#26a69a\" : \"#ef5350\"\n                };\n                macdSeries.update(lastMACD);\n                signalSeries.update(lastSignal);\n                histogramSeries.update(lastHistogram);\n            }\n        } else {\n            // Handle other strategies\n            const colors = [\n                \"#2962FF\",\n                \"#FF6B6B\"\n            ];\n            selectedStrategy.indicators.forEach((indicator, index)=>{\n                const lineSeries = chart.addLineSeries({\n                    color: colors[index],\n                    lineWidth: 2,\n                    title: indicator.name,\n                    priceFormat: {\n                        type: \"price\",\n                        precision: 2,\n                        minMove: 0.01\n                    }\n                });\n                indicatorSeriesRefs.current.set(indicator.name, lineSeries);\n                const lineData = (index === 0 ? fastLine : slowLine).map((value, idx)=>({\n                        time: uniqueData[idx].time,\n                        value: isNaN(value) ? null : value\n                    })).filter((d)=>d.value !== null).sort((a, b)=>a.time - b.time);\n                lineSeries.setData(lineData);\n            });\n        }\n        // Create marker series\n        markerSeriesRef.current = chart.addLineSeries({\n            lastValueVisible: false,\n            priceLineVisible: false,\n            crosshairMarkerVisible: false,\n            lineVisible: false,\n            lineWidth: 1,\n            color: \"rgba(0, 0, 0, 0)\",\n            priceScaleId: \"right\"\n        });\n        // Find and set signals\n        const signals = [];\n        for(let i = 1; i < uniqueData.length; i++){\n            const signal = checkForSignal(fastLine[i - 1], slowLine[i - 1], fastLine[i], slowLine[i], uniqueData[i], uniqueData.slice(Math.max(0, i - 10), i + 1));\n            if (signal) {\n                signals.push(signal);\n            }\n        }\n        if (signals.length > 0) {\n            const sortedSignals = signals.sort((a, b)=>a.time - b.time);\n            markerSeriesRef.current.setMarkers(sortedSignals);\n            markerSeriesRef.current.setData(sortedSignals.map((signal)=>({\n                    time: signal.time,\n                    value: signal.value\n                })));\n        }\n    };\n    // Modify the real-time signal check\n    const checkRealTimeSignal = (data)=>{\n        if (!markerSeriesRef.current || data.length < 2) return;\n        // Ensure data is sorted and deduplicated\n        const uniqueData = Array.from(new Map(data.map((item)=>[\n                item.time,\n                item\n            ])).values()).sort((a, b)=>a.time - b.time);\n        const prices = uniqueData.map((d)=>d.close);\n        let fastLine = [];\n        let slowLine = [];\n        let histogramData = [];\n        // Calculate indicators based on strategy type\n        if (strategy === \"macd_crossover\") {\n            const macdData = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateMACD)(prices);\n            fastLine = macdData.macd;\n            slowLine = macdData.signal;\n            histogramData = macdData.histogram;\n            // Update MACD series if they exist\n            const macdSeries = indicatorSeriesRefs.current.get(\"MACD\");\n            const signalSeries = indicatorSeriesRefs.current.get(\"Signal\");\n            const histogramSeries = indicatorSeriesRefs.current.get(\"Histogram\");\n            if (macdSeries && signalSeries && histogramSeries) {\n                // Scale histogram values with dynamic scaling\n                const maxHistogram = Math.max(...histogramData.map(Math.abs));\n                const scaleFactor = getHistogramScaleFactor(timeframe, maxHistogram);\n                const lastMACD = {\n                    time: uniqueData[uniqueData.length - 1].time,\n                    value: fastLine[fastLine.length - 1]\n                };\n                const lastSignal = {\n                    time: uniqueData[uniqueData.length - 1].time,\n                    value: slowLine[slowLine.length - 1]\n                };\n                const lastHistogram = {\n                    time: uniqueData[uniqueData.length - 1].time,\n                    value: histogramData[histogramData.length - 1] * scaleFactor,\n                    color: histogramData[histogramData.length - 1] >= 0 ? \"#26a69a\" : \"#ef5350\"\n                };\n                macdSeries.update(lastMACD);\n                signalSeries.update(lastSignal);\n                histogramSeries.update(lastHistogram);\n            }\n        } else {\n            switch(strategy){\n                case \"ema_crossover\":\n                    fastLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateEMA)(prices, 9);\n                    slowLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateEMA)(prices, 21);\n                    break;\n                case \"sma_crossover\":\n                    fastLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateSMA)(prices, 9);\n                    slowLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateSMA)(prices, 21);\n                    break;\n                case \"tema_crossover\":\n                    fastLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateTEMA)(prices, 7);\n                    slowLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateTEMA)(prices, 21);\n                    break;\n                case \"golden_cross\":\n                    fastLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateSMA)(prices, 50);\n                    slowLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateSMA)(prices, 200);\n                    break;\n                case \"hull_crossover\":\n                    fastLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateHMA)(prices, 9);\n                    slowLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateHMA)(prices, 21);\n                    break;\n                case \"ema_5_13\":\n                    fastLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateEMA)(prices, 5);\n                    slowLine = (0,_services_strategies_moving_averages__WEBPACK_IMPORTED_MODULE_5__.calculateEMA)(prices, 13);\n                    break;\n            }\n        }\n        const signal = checkForSignal(fastLine[fastLine.length - 2], slowLine[slowLine.length - 2], fastLine[fastLine.length - 1], slowLine[slowLine.length - 1], uniqueData[uniqueData.length - 1], uniqueData.slice(-10));\n        if (signal) {\n            const existingMarkers = markerSeriesRef.current.markers() || [];\n            const newMarkers = [\n                ...existingMarkers,\n                signal\n            ].sort((a, b)=>a.time - b.time);\n            console.log(\"Adding real-time \".concat(signal.text, \" signal\"));\n            markerSeriesRef.current.setMarkers(newMarkers);\n            // Update marker series data\n            markerSeriesRef.current.setData(newMarkers.map((marker)=>({\n                    time: marker.time,\n                    value: marker.value\n                })));\n        }\n    };\n    // Function to update price stats\n    const updatePriceStats = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((data)=>{\n        if (data.length < 2) return;\n        const last24h = data.slice(-24); // Assuming hourly data\n        const currentPrice = last24h[last24h.length - 1].close;\n        const openPrice = last24h[0].open;\n        const high24h = Math.max(...last24h.map((d)=>d.high));\n        const low24h = Math.min(...last24h.map((d)=>d.low));\n        const priceChange = (currentPrice - openPrice) / openPrice * 100;\n        const changeColor = priceChange >= 0 ? \"text-[#26a69a]\" : \"text-[#ef5350]\";\n        setCurrentPrice(currentPrice.toFixed(2));\n        setPriceStats({\n            change24h: '<span class=\"'.concat(changeColor, '\">').concat(priceChange >= 0 ? \"+\" : \"\").concat(priceChange.toFixed(2), \"%</span>\"),\n            high24h: high24h.toFixed(2),\n            low24h: low24h.toFixed(2)\n        });\n        // Update DOM elements\n        const priceElement = document.getElementById(\"current-price\");\n        const changeElement = document.getElementById(\"price-change\");\n        const highElement = document.getElementById(\"24h-high\");\n        const lowElement = document.getElementById(\"24h-low\");\n        if (priceElement) priceElement.textContent = currentPrice.toFixed(2);\n        if (changeElement) changeElement.innerHTML = '<span class=\"'.concat(changeColor, '\">').concat(priceChange >= 0 ? \"+\" : \"\").concat(priceChange.toFixed(2), \"%</span>\");\n        if (highElement) highElement.textContent = high24h.toFixed(2);\n        if (lowElement) lowElement.textContent = low24h.toFixed(2);\n    }, []);\n    // Effect for strategy changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (chartRef.current && historicalDataRef.current.length > 0) {\n            addStrategyIndicators(chartRef.current, historicalDataRef.current);\n        }\n    }, [\n        strategy\n    ]);\n    // Main chart initialization effect\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!chartContainerRef.current) return;\n        const chartOptions = {\n            layout: {\n                background: {\n                    color: \"#1E222D\"\n                },\n                textColor: \"#DDD\"\n            },\n            grid: {\n                vertLines: {\n                    color: \"#2B2B43\"\n                },\n                horzLines: {\n                    color: \"#2B2B43\"\n                }\n            },\n            timeScale: {\n                borderColor: \"#2B2B43\",\n                timeVisible: true\n            },\n            rightPriceScale: {\n                borderColor: \"#2B2B43\",\n                visible: true,\n                scaleMargins: {\n                    top: 0.1,\n                    bottom: 0.4\n                }\n            },\n            width: chartContainerRef.current.clientWidth,\n            height: chartContainerRef.current.clientHeight\n        };\n        const chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(chartContainerRef.current, chartOptions);\n        const candlestickSeries = chart.addCandlestickSeries({\n            upColor: \"#26a69a\",\n            downColor: \"#ef5350\",\n            borderVisible: false,\n            wickUpColor: \"#26a69a\",\n            wickDownColor: \"#ef5350\",\n            priceScaleId: \"right\"\n        });\n        candlestickSeriesRef.current = candlestickSeries;\n        chartRef.current = chart;\n        // Remove TradingView logo elements\n        const removeTradingViewLogo = ()=>{\n            const logoElement = document.getElementById(\"tv-attr-logo\");\n            if (logoElement) {\n                logoElement.remove();\n            }\n            const headerLogo = document.querySelector(\".tv-header__link\");\n            if (headerLogo) {\n                headerLogo.remove();\n            }\n        };\n        // Run logo removal after chart is created and after a delay\n        removeTradingViewLogo();\n        const logoTimeoutId = setTimeout(removeTradingViewLogo, 100);\n        // Load initial data\n        const loadData = async ()=>{\n            try {\n                const data = await (0,_services_api_cryptoCompareAPI__WEBPACK_IMPORTED_MODULE_3__.getHistoricalData)(timeframe);\n                historicalDataRef.current = data;\n                candlestickSeries.setData(data);\n                updatePriceStats(data); // Update price stats with historical data\n                if (strategy !== \"none\") {\n                    addStrategyIndicators(chart, data);\n                }\n                // Initialize current candle from last historical candle\n                if (data.length > 0) {\n                    const lastCandle = data[data.length - 1];\n                    currentCandleRef.current = {\n                        time: lastCandle.time,\n                        open: lastCandle.close,\n                        high: lastCandle.close,\n                        low: lastCandle.close,\n                        close: lastCandle.close\n                    };\n                }\n            } catch (error) {\n                console.error(\"Error loading data:\", error);\n            }\n        };\n        loadData();\n        // Real-time updates\n        const unsubscribe = (0,_services_api_cryptoCompareAPI__WEBPACK_IMPORTED_MODULE_3__.subscribeToPrice)((data)=>{\n            if (!candlestickSeriesRef.current) return;\n            const intervalSeconds = getIntervalSeconds(timeframe);\n            const candleTimestamp = Math.floor(data.time / intervalSeconds) * intervalSeconds;\n            // If this is a new candle\n            if (!currentCandleRef.current || candleTimestamp !== currentCandleRef.current.time) {\n                // If we had a previous candle, add it to historical data and check for signals\n                if (currentCandleRef.current) {\n                    historicalDataRef.current = [\n                        ...historicalDataRef.current,\n                        currentCandleRef.current\n                    ];\n                    // Update strategies with the new historical data\n                    if (strategy !== \"none\" && chartRef.current) {\n                        addStrategyIndicators(chartRef.current, historicalDataRef.current);\n                    }\n                }\n                // Start new candle\n                currentCandleRef.current = {\n                    time: candleTimestamp,\n                    open: data.value,\n                    high: data.value,\n                    low: data.value,\n                    close: data.value\n                };\n            } else {\n                // Update current candle\n                currentCandleRef.current.high = Math.max(currentCandleRef.current.high, data.value);\n                currentCandleRef.current.low = Math.min(currentCandleRef.current.low, data.value);\n                currentCandleRef.current.close = data.value;\n                // Check for real-time signals with current candle\n                if (strategy !== \"none\" && chartRef.current && historicalDataRef.current.length > 0) {\n                    const updatedData = [\n                        ...historicalDataRef.current,\n                        currentCandleRef.current\n                    ];\n                    checkRealTimeSignal(updatedData);\n                }\n            }\n            // Update the chart with current candle\n            candlestickSeriesRef.current.update(currentCandleRef.current);\n            // Update price stats with the latest data\n            if (historicalDataRef.current.length > 0) {\n                updatePriceStats([\n                    ...historicalDataRef.current,\n                    currentCandleRef.current\n                ]);\n            }\n        }, timeframe);\n        // Handle window resize\n        const handleResize = ()=>{\n            if (chartContainerRef.current && chartRef.current) {\n                chartRef.current.applyOptions({\n                    width: chartContainerRef.current.clientWidth,\n                    height: chartContainerRef.current.clientHeight\n                });\n            }\n        };\n        window.addEventListener(\"resize\", handleResize);\n        return ()=>{\n            window.removeEventListener(\"resize\", handleResize);\n            clearTimeout(logoTimeoutId);\n            unsubscribe();\n            chart.remove();\n        };\n    }, [\n        timeframe\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col w-full h-full\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_TickerHeader__WEBPACK_IMPORTED_MODULE_6__.TickerHeader, {\n                token: token,\n                exchange: exchange,\n                onExchangeChange: setExchange\n            }, void 0, false, {\n                fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n                lineNumber: 698,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: chartContainerRef,\n                className: \"flex-1\"\n            }, void 0, false, {\n                fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n                lineNumber: 703,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n        lineNumber: 697,\n        columnNumber: 5\n    }, this);\n}\n_s(CandlestickChart, \"9vhK1uWK5oN+SL5eNz9PXaSDifg=\");\n_c = CandlestickChart;\nvar _c;\n$RefreshReg$(_c, \"CandlestickChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Chart/CandlestickChart.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/Chart/TickerHeader.tsx":
/*!***********************************************!*\
  !*** ./src/components/Chart/TickerHeader.tsx ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TickerHeader: function() { return /* binding */ TickerHeader; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst exchanges = [\n    {\n        id: \"coinbase\",\n        name: \"Coinbase\"\n    },\n    {\n        id: \"uniswap\",\n        name: \"Uniswap\"\n    },\n    {\n        id: \"raydium\",\n        name: \"Raydium\"\n    }\n];\nfunction TickerHeader(param) {\n    let { token, exchange, onExchangeChange } = param;\n    var _exchanges_find;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex items-center gap-2 p-2 bg-[#1E222D] text-white border-b border-[#2B2B43]\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center gap-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-xl font-semibold\",\n                        children: token.toUpperCase()\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                        lineNumber: 20,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative group\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: \"flex items-center gap-1 px-2 py-1 text-sm bg-[#2B2B43] rounded hover:bg-[#363A45] transition-colors\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: (_exchanges_find = exchanges.find((e)=>e.id === exchange)) === null || _exchanges_find === void 0 ? void 0 : _exchanges_find.name\n                                    }, void 0, false, {\n                                        fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                                        lineNumber: 25,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                        className: \"w-4 h-4\",\n                                        fill: \"none\",\n                                        viewBox: \"0 0 24 24\",\n                                        stroke: \"currentColor\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            strokeLinecap: \"round\",\n                                            strokeLinejoin: \"round\",\n                                            strokeWidth: 2,\n                                            d: \"M19 9l-7 7-7-7\"\n                                        }, void 0, false, {\n                                            fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                                            lineNumber: 27,\n                                            columnNumber: 15\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                                        lineNumber: 26,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                                lineNumber: 24,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"absolute hidden group-hover:block w-full min-w-[120px] mt-1 bg-[#2B2B43] rounded shadow-lg\",\n                                children: exchanges.map((e)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        className: \"w-full px-4 py-2 text-left text-sm hover:bg-[#363A45] transition-colors\",\n                                        onClick: ()=>onExchangeChange(e.id),\n                                        children: e.name\n                                    }, e.id, false, {\n                                        fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                                        lineNumber: 34,\n                                        columnNumber: 15\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                                lineNumber: 32,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                        lineNumber: 23,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                lineNumber: 18,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"ml-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    className: \"text-lg font-medium\",\n                    id: \"current-price\",\n                    children: \"Loading...\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                    lineNumber: 48,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                lineNumber: 47,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"ml-4 text-sm\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-neutral-400\",\n                        children: \"24h Change\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                        lineNumber: 55,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"ml-2\",\n                        id: \"price-change\",\n                        children: \"—\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                        lineNumber: 56,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                lineNumber: 54,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"ml-4 text-sm\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-neutral-400\",\n                        children: \"24h High\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                        lineNumber: 61,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"ml-2\",\n                        id: \"24h-high\",\n                        children: \"—\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                        lineNumber: 62,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                lineNumber: 60,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"ml-4 text-sm\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-neutral-400\",\n                        children: \"24h Low\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                        lineNumber: 67,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"ml-2\",\n                        id: \"24h-low\",\n                        children: \"—\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                        lineNumber: 68,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n                lineNumber: 66,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"E:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\TickerHeader.tsx\",\n        lineNumber: 17,\n        columnNumber: 5\n    }, this);\n}\n_c = TickerHeader;\nvar _c;\n$RefreshReg$(_c, \"TickerHeader\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0NoYXJ0L1RpY2tlckhlYWRlci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMEI7QUFRMUIsTUFBTUMsWUFBWTtJQUNoQjtRQUFFQyxJQUFJO1FBQVlDLE1BQU07SUFBVztJQUNuQztRQUFFRCxJQUFJO1FBQVdDLE1BQU07SUFBVTtJQUNqQztRQUFFRCxJQUFJO1FBQVdDLE1BQU07SUFBVTtDQUNsQztBQUVNLFNBQVNDLGFBQWEsS0FBd0Q7UUFBeEQsRUFBRUMsS0FBSyxFQUFFQyxRQUFRLEVBQUVDLGdCQUFnQixFQUFxQixHQUF4RDtRQVVWTjtJQVRqQixxQkFDRSw4REFBQ087UUFBSUMsV0FBVTs7MEJBQ2IsOERBQUNEO2dCQUFJQyxXQUFVOztrQ0FFYiw4REFBQ0M7d0JBQUtELFdBQVU7a0NBQXlCSixNQUFNTSxXQUFXOzs7Ozs7a0NBRzFELDhEQUFDSDt3QkFBSUMsV0FBVTs7MENBQ2IsOERBQUNHO2dDQUFPSCxXQUFVOztrREFDaEIsOERBQUNDO21EQUFNVCxrQkFBQUEsVUFBVVksSUFBSSxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFWixFQUFFLEtBQUtJLHVCQUE3Qkwsc0NBQUFBLGdCQUF3Q0UsSUFBSTs7Ozs7O2tEQUNuRCw4REFBQ1k7d0NBQUlOLFdBQVU7d0NBQVVPLE1BQUs7d0NBQU9DLFNBQVE7d0NBQVlDLFFBQU87a0RBQzlELDRFQUFDQzs0Q0FBS0MsZUFBYzs0Q0FBUUMsZ0JBQWU7NENBQVFDLGFBQWE7NENBQUdDLEdBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7OzBDQUt6RSw4REFBQ2Y7Z0NBQUlDLFdBQVU7MENBQ1pSLFVBQVV1QixHQUFHLENBQUMsQ0FBQ1Ysa0JBQ2QsOERBQUNGO3dDQUVDSCxXQUFVO3dDQUNWZ0IsU0FBUyxJQUFNbEIsaUJBQWlCTyxFQUFFWixFQUFFO2tEQUVuQ1ksRUFBRVgsSUFBSTt1Q0FKRlcsRUFBRVosRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFZbkIsOERBQUNNO2dCQUFJQyxXQUFVOzBCQUNiLDRFQUFDQztvQkFBS0QsV0FBVTtvQkFBc0JQLElBQUc7OEJBQWdCOzs7Ozs7Ozs7OzswQkFNM0QsOERBQUNNO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ0M7d0JBQUtELFdBQVU7a0NBQW1COzs7Ozs7a0NBQ25DLDhEQUFDQzt3QkFBS0QsV0FBVTt3QkFBT1AsSUFBRztrQ0FBZTs7Ozs7Ozs7Ozs7OzBCQUkzQyw4REFBQ007Z0JBQUlDLFdBQVU7O2tDQUNiLDhEQUFDQzt3QkFBS0QsV0FBVTtrQ0FBbUI7Ozs7OztrQ0FDbkMsOERBQUNDO3dCQUFLRCxXQUFVO3dCQUFPUCxJQUFHO2tDQUFXOzs7Ozs7Ozs7Ozs7MEJBSXZDLDhEQUFDTTtnQkFBSUMsV0FBVTs7a0NBQ2IsOERBQUNDO3dCQUFLRCxXQUFVO2tDQUFtQjs7Ozs7O2tDQUNuQyw4REFBQ0M7d0JBQUtELFdBQVU7d0JBQU9QLElBQUc7a0NBQVU7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUk1QztLQXpEZ0JFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0NoYXJ0L1RpY2tlckhlYWRlci50c3g/NWIxNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxuaW50ZXJmYWNlIFRpY2tlckhlYWRlclByb3BzIHtcclxuICB0b2tlbjogc3RyaW5nO1xyXG4gIGV4Y2hhbmdlOiAndW5pc3dhcCcgfCAncmF5ZGl1bScgfCAnY29pbmJhc2UnO1xyXG4gIG9uRXhjaGFuZ2VDaGFuZ2U6IChleGNoYW5nZTogJ3VuaXN3YXAnIHwgJ3JheWRpdW0nIHwgJ2NvaW5iYXNlJykgPT4gdm9pZDtcclxufVxyXG5cclxuY29uc3QgZXhjaGFuZ2VzID0gW1xyXG4gIHsgaWQ6ICdjb2luYmFzZScsIG5hbWU6ICdDb2luYmFzZScgfSxcclxuICB7IGlkOiAndW5pc3dhcCcsIG5hbWU6ICdVbmlzd2FwJyB9LFxyXG4gIHsgaWQ6ICdyYXlkaXVtJywgbmFtZTogJ1JheWRpdW0nIH0sXHJcbl0gYXMgY29uc3Q7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gVGlja2VySGVhZGVyKHsgdG9rZW4sIGV4Y2hhbmdlLCBvbkV4Y2hhbmdlQ2hhbmdlIH06IFRpY2tlckhlYWRlclByb3BzKSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTIgcC0yIGJnLVsjMUUyMjJEXSB0ZXh0LXdoaXRlIGJvcmRlci1iIGJvcmRlci1bIzJCMkI0M11cIj5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMlwiPlxyXG4gICAgICAgIHsvKiBUb2tlbiBTeW1ib2wgKi99XHJcbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC14bCBmb250LXNlbWlib2xkXCI+e3Rva2VuLnRvVXBwZXJDYXNlKCl9PC9zcGFuPlxyXG4gICAgICAgIFxyXG4gICAgICAgIHsvKiBFeGNoYW5nZSBTZWxlY3RvciAqL31cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlbGF0aXZlIGdyb3VwXCI+XHJcbiAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0xIHB4LTIgcHktMSB0ZXh0LXNtIGJnLVsjMkIyQjQzXSByb3VuZGVkIGhvdmVyOmJnLVsjMzYzQTQ1XSB0cmFuc2l0aW9uLWNvbG9yc1wiPlxyXG4gICAgICAgICAgICA8c3Bhbj57ZXhjaGFuZ2VzLmZpbmQoZSA9PiBlLmlkID09PSBleGNoYW5nZSk/Lm5hbWV9PC9zcGFuPlxyXG4gICAgICAgICAgICA8c3ZnIGNsYXNzTmFtZT1cInctNCBoLTRcIiBmaWxsPVwibm9uZVwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBzdHJva2U9XCJjdXJyZW50Q29sb3JcIj5cclxuICAgICAgICAgICAgICA8cGF0aCBzdHJva2VMaW5lY2FwPVwicm91bmRcIiBzdHJva2VMaW5lam9pbj1cInJvdW5kXCIgc3Ryb2tlV2lkdGg9ezJ9IGQ9XCJNMTkgOWwtNyA3LTctN1wiIC8+XHJcbiAgICAgICAgICAgIDwvc3ZnPlxyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIHsvKiBEcm9wZG93biBNZW51ICovfVxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhYnNvbHV0ZSBoaWRkZW4gZ3JvdXAtaG92ZXI6YmxvY2sgdy1mdWxsIG1pbi13LVsxMjBweF0gbXQtMSBiZy1bIzJCMkI0M10gcm91bmRlZCBzaGFkb3ctbGdcIj5cclxuICAgICAgICAgICAge2V4Y2hhbmdlcy5tYXAoKGUpID0+IChcclxuICAgICAgICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICAgICAgICBrZXk9e2UuaWR9XHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgcHgtNCBweS0yIHRleHQtbGVmdCB0ZXh0LXNtIGhvdmVyOmJnLVsjMzYzQTQ1XSB0cmFuc2l0aW9uLWNvbG9yc1wiXHJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbkV4Y2hhbmdlQ2hhbmdlKGUuaWQpfVxyXG4gICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgIHtlLm5hbWV9XHJcbiAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICBcclxuICAgICAgey8qIEN1cnJlbnQgUHJpY2UgKHBsYWNlaG9sZGVyIGZvciByZWFsLXRpbWUgcHJpY2UpICovfVxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1sLTRcIj5cclxuICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LWxnIGZvbnQtbWVkaXVtXCIgaWQ9XCJjdXJyZW50LXByaWNlXCI+XHJcbiAgICAgICAgICBMb2FkaW5nLi4uXHJcbiAgICAgICAgPC9zcGFuPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgXHJcbiAgICAgIHsvKiAyNGggQ2hhbmdlIChwbGFjZWhvbGRlciBmb3IgcmVhbCBzdGF0cykgKi99XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWwtNCB0ZXh0LXNtXCI+XHJcbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC1uZXV0cmFsLTQwMFwiPjI0aCBDaGFuZ2U8L3NwYW4+XHJcbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibWwtMlwiIGlkPVwicHJpY2UtY2hhbmdlXCI+4oCUPC9zcGFuPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgXHJcbiAgICAgIHsvKiAyNGggSGlnaCAocGxhY2Vob2xkZXIgZm9yIHJlYWwgc3RhdHMpICovfVxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1sLTQgdGV4dC1zbVwiPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtbmV1dHJhbC00MDBcIj4yNGggSGlnaDwvc3Bhbj5cclxuICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJtbC0yXCIgaWQ9XCIyNGgtaGlnaFwiPuKAlDwvc3Bhbj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIFxyXG4gICAgICB7LyogMjRoIExvdyAocGxhY2Vob2xkZXIgZm9yIHJlYWwgc3RhdHMpICovfVxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1sLTQgdGV4dC1zbVwiPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtbmV1dHJhbC00MDBcIj4yNGggTG93PC9zcGFuPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1sLTJcIiBpZD1cIjI0aC1sb3dcIj7igJQ8L3NwYW4+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufSAiXSwibmFtZXMiOlsiUmVhY3QiLCJleGNoYW5nZXMiLCJpZCIsIm5hbWUiLCJUaWNrZXJIZWFkZXIiLCJ0b2tlbiIsImV4Y2hhbmdlIiwib25FeGNoYW5nZUNoYW5nZSIsImRpdiIsImNsYXNzTmFtZSIsInNwYW4iLCJ0b1VwcGVyQ2FzZSIsImJ1dHRvbiIsImZpbmQiLCJlIiwic3ZnIiwiZmlsbCIsInZpZXdCb3giLCJzdHJva2UiLCJwYXRoIiwic3Ryb2tlTGluZWNhcCIsInN0cm9rZUxpbmVqb2luIiwic3Ryb2tlV2lkdGgiLCJkIiwibWFwIiwib25DbGljayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Chart/TickerHeader.tsx\n"));

/***/ })

});