"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/strategies/sma-crossover.ts":
/*!**************************************************!*\
  !*** ./src/services/strategies/sma-crossover.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   smaCrossoverStrategy: function() { return /* binding */ smaCrossoverStrategy; }\n/* harmony export */ });\n// Calculate Simple Moving Average (SMA)\nfunction calculateSMA(data, period) {\n    const sma = [];\n    // Fill initial values with NaN until we have enough data\n    for(let i = 0; i < period - 1; i++){\n        sma.push(NaN);\n    }\n    // Calculate SMA for each point after the initial period\n    for(let i = period - 1; i < data.length; i++){\n        let sum = 0;\n        for(let j = 0; j < period; j++){\n            sum += data[i - j];\n        }\n        sma.push(sum / period);\n    }\n    return sma;\n}\n// Convert any time format to Unix timestamp\nfunction getUnixTime(time) {\n    if (typeof time === \"number\") {\n        return time;\n    }\n    if (typeof time === \"string\") {\n        return Math.floor(new Date(time).getTime() / 1000);\n    }\n    // Handle BusinessDay format\n    const { year, month, day } = time;\n    return Math.floor(new Date(year, month - 1, day).getTime() / 1000);\n}\nconst smaCrossoverStrategy = {\n    id: \"sma_crossover\",\n    name: \"SMA Crossover\",\n    description: \"Fast SMA (9) crossing Slow SMA (21)\",\n    indicators: [\n        {\n            name: \"Fast SMA (9)\",\n            data: []\n        },\n        {\n            name: \"Slow SMA (21)\",\n            data: []\n        }\n    ],\n    analyze: (data)=>{\n        const prices = data.map((d)=>d.close);\n        const fastSMA = calculateSMA(prices, 9);\n        const slowSMA = calculateSMA(prices, 21);\n        // Need at least two points to detect a crossover\n        if (fastSMA.length < 2) return null;\n        const last = fastSMA.length - 1;\n        const prev = last - 1;\n        // Check for crossovers\n        if (!isNaN(fastSMA[prev]) && !isNaN(slowSMA[prev]) && !isNaN(fastSMA[last]) && !isNaN(slowSMA[last])) {\n            // Buy signal: Fast SMA crosses above Slow SMA\n            if (fastSMA[prev] <= slowSMA[prev] && fastSMA[last] > slowSMA[last]) {\n                return {\n                    type: \"buy\",\n                    price: data[last].close,\n                    time: getUnixTime(data[last].time),\n                    message: \"Buy Signal: Fast SMA (\".concat(fastSMA[last].toFixed(2), \") crossed above Slow SMA (\").concat(slowSMA[last].toFixed(2), \")\")\n                };\n            }\n            // Sell signal: Fast SMA crosses below Slow SMA\n            if (fastSMA[prev] >= slowSMA[prev] && fastSMA[last] < slowSMA[last]) {\n                return {\n                    type: \"sell\",\n                    price: data[last].close,\n                    time: getUnixTime(data[last].time),\n                    message: \"Sell Signal: Fast SMA (\".concat(fastSMA[last].toFixed(2), \") crossed below Slow SMA (\").concat(slowSMA[last].toFixed(2), \")\")\n                };\n            }\n        }\n        return null;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9zdHJhdGVnaWVzL3NtYS1jcm9zc292ZXIudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUdBLHdDQUF3QztBQUN4QyxTQUFTQSxhQUFhQyxJQUFjLEVBQUVDLE1BQWM7SUFDbEQsTUFBTUMsTUFBZ0IsRUFBRTtJQUV4Qix5REFBeUQ7SUFDekQsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlGLFNBQVMsR0FBR0UsSUFBSztRQUNuQ0QsSUFBSUUsSUFBSSxDQUFDQztJQUNYO0lBRUEsd0RBQXdEO0lBQ3hELElBQUssSUFBSUYsSUFBSUYsU0FBUyxHQUFHRSxJQUFJSCxLQUFLTSxNQUFNLEVBQUVILElBQUs7UUFDN0MsSUFBSUksTUFBTTtRQUNWLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJUCxRQUFRTyxJQUFLO1lBQy9CRCxPQUFPUCxJQUFJLENBQUNHLElBQUlLLEVBQUU7UUFDcEI7UUFDQU4sSUFBSUUsSUFBSSxDQUFDRyxNQUFNTjtJQUNqQjtJQUVBLE9BQU9DO0FBQ1Q7QUFFQSw0Q0FBNEM7QUFDNUMsU0FBU08sWUFBWUMsSUFBVTtJQUM3QixJQUFJLE9BQU9BLFNBQVMsVUFBVTtRQUM1QixPQUFPQTtJQUNUO0lBQ0EsSUFBSSxPQUFPQSxTQUFTLFVBQVU7UUFDNUIsT0FBT0MsS0FBS0MsS0FBSyxDQUFDLElBQUlDLEtBQUtILE1BQU1JLE9BQU8sS0FBSztJQUMvQztJQUNBLDRCQUE0QjtJQUM1QixNQUFNLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxHQUFHLEVBQUUsR0FBR1A7SUFDN0IsT0FBT0MsS0FBS0MsS0FBSyxDQUFDLElBQUlDLEtBQUtFLE1BQU1DLFFBQVEsR0FBR0MsS0FBS0gsT0FBTyxLQUFLO0FBQy9EO0FBRU8sTUFBTUksdUJBQWlDO0lBQzVDQyxJQUFJO0lBQ0pDLE1BQU07SUFDTkMsYUFBYTtJQUNiQyxZQUFZO1FBQ1Y7WUFDRUYsTUFBTTtZQUNOcEIsTUFBTSxFQUFFO1FBQ1Y7UUFDQTtZQUNFb0IsTUFBTTtZQUNOcEIsTUFBTSxFQUFFO1FBQ1Y7S0FDRDtJQUNEdUIsU0FBUyxDQUFDdkI7UUFDUixNQUFNd0IsU0FBU3hCLEtBQUt5QixHQUFHLENBQUNDLENBQUFBLElBQUtBLEVBQUVDLEtBQUs7UUFDcEMsTUFBTUMsVUFBVTdCLGFBQWF5QixRQUFRO1FBQ3JDLE1BQU1LLFVBQVU5QixhQUFheUIsUUFBUTtRQUVyQyxpREFBaUQ7UUFDakQsSUFBSUksUUFBUXRCLE1BQU0sR0FBRyxHQUFHLE9BQU87UUFFL0IsTUFBTXdCLE9BQU9GLFFBQVF0QixNQUFNLEdBQUc7UUFDOUIsTUFBTXlCLE9BQU9ELE9BQU87UUFFcEIsdUJBQXVCO1FBQ3ZCLElBQUksQ0FBQ0UsTUFBTUosT0FBTyxDQUFDRyxLQUFLLEtBQUssQ0FBQ0MsTUFBTUgsT0FBTyxDQUFDRSxLQUFLLEtBQzdDLENBQUNDLE1BQU1KLE9BQU8sQ0FBQ0UsS0FBSyxLQUFLLENBQUNFLE1BQU1ILE9BQU8sQ0FBQ0MsS0FBSyxHQUFHO1lBRWxELDhDQUE4QztZQUM5QyxJQUFJRixPQUFPLENBQUNHLEtBQUssSUFBSUYsT0FBTyxDQUFDRSxLQUFLLElBQUlILE9BQU8sQ0FBQ0UsS0FBSyxHQUFHRCxPQUFPLENBQUNDLEtBQUssRUFBRTtnQkFDbkUsT0FBTztvQkFDTEcsTUFBTTtvQkFDTkMsT0FBT2xDLElBQUksQ0FBQzhCLEtBQUssQ0FBQ0gsS0FBSztvQkFDdkJqQixNQUFNRCxZQUFZVCxJQUFJLENBQUM4QixLQUFLLENBQUNwQixJQUFJO29CQUNqQ3lCLFNBQVMseUJBQThFTixPQUFyREQsT0FBTyxDQUFDRSxLQUFLLENBQUNNLE9BQU8sQ0FBQyxJQUFHLDhCQUFxRCxPQUF6QlAsT0FBTyxDQUFDQyxLQUFLLENBQUNNLE9BQU8sQ0FBQyxJQUFHO2dCQUNsSDtZQUNGO1lBRUEsK0NBQStDO1lBQy9DLElBQUlSLE9BQU8sQ0FBQ0csS0FBSyxJQUFJRixPQUFPLENBQUNFLEtBQUssSUFBSUgsT0FBTyxDQUFDRSxLQUFLLEdBQUdELE9BQU8sQ0FBQ0MsS0FBSyxFQUFFO2dCQUNuRSxPQUFPO29CQUNMRyxNQUFNO29CQUNOQyxPQUFPbEMsSUFBSSxDQUFDOEIsS0FBSyxDQUFDSCxLQUFLO29CQUN2QmpCLE1BQU1ELFlBQVlULElBQUksQ0FBQzhCLEtBQUssQ0FBQ3BCLElBQUk7b0JBQ2pDeUIsU0FBUywwQkFBK0VOLE9BQXJERCxPQUFPLENBQUNFLEtBQUssQ0FBQ00sT0FBTyxDQUFDLElBQUcsOEJBQXFELE9BQXpCUCxPQUFPLENBQUNDLEtBQUssQ0FBQ00sT0FBTyxDQUFDLElBQUc7Z0JBQ25IO1lBQ0Y7UUFDRjtRQUVBLE9BQU87SUFDVDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3NlcnZpY2VzL3N0cmF0ZWdpZXMvc21hLWNyb3Nzb3Zlci50cz80N2E1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0cmF0ZWd5LCBTdHJhdGVneVNpZ25hbCB9IGZyb20gJy4vaW5kZXgnO1xuaW1wb3J0IHsgVGltZSwgQnVzaW5lc3NEYXkgfSBmcm9tICdsaWdodHdlaWdodC1jaGFydHMnO1xuXG4vLyBDYWxjdWxhdGUgU2ltcGxlIE1vdmluZyBBdmVyYWdlIChTTUEpXG5mdW5jdGlvbiBjYWxjdWxhdGVTTUEoZGF0YTogbnVtYmVyW10sIHBlcmlvZDogbnVtYmVyKTogbnVtYmVyW10ge1xuICBjb25zdCBzbWE6IG51bWJlcltdID0gW107XG4gIFxuICAvLyBGaWxsIGluaXRpYWwgdmFsdWVzIHdpdGggTmFOIHVudGlsIHdlIGhhdmUgZW5vdWdoIGRhdGFcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBwZXJpb2QgLSAxOyBpKyspIHtcbiAgICBzbWEucHVzaChOYU4pO1xuICB9XG5cbiAgLy8gQ2FsY3VsYXRlIFNNQSBmb3IgZWFjaCBwb2ludCBhZnRlciB0aGUgaW5pdGlhbCBwZXJpb2RcbiAgZm9yIChsZXQgaSA9IHBlcmlvZCAtIDE7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IHN1bSA9IDA7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBwZXJpb2Q7IGorKykge1xuICAgICAgc3VtICs9IGRhdGFbaSAtIGpdO1xuICAgIH1cbiAgICBzbWEucHVzaChzdW0gLyBwZXJpb2QpO1xuICB9XG5cbiAgcmV0dXJuIHNtYTtcbn1cblxuLy8gQ29udmVydCBhbnkgdGltZSBmb3JtYXQgdG8gVW5peCB0aW1lc3RhbXBcbmZ1bmN0aW9uIGdldFVuaXhUaW1lKHRpbWU6IFRpbWUpOiBudW1iZXIge1xuICBpZiAodHlwZW9mIHRpbWUgPT09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIHRpbWU7XG4gIH1cbiAgaWYgKHR5cGVvZiB0aW1lID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBNYXRoLmZsb29yKG5ldyBEYXRlKHRpbWUpLmdldFRpbWUoKSAvIDEwMDApO1xuICB9XG4gIC8vIEhhbmRsZSBCdXNpbmVzc0RheSBmb3JtYXRcbiAgY29uc3QgeyB5ZWFyLCBtb250aCwgZGF5IH0gPSB0aW1lIGFzIEJ1c2luZXNzRGF5O1xuICByZXR1cm4gTWF0aC5mbG9vcihuZXcgRGF0ZSh5ZWFyLCBtb250aCAtIDEsIGRheSkuZ2V0VGltZSgpIC8gMTAwMCk7XG59XG5cbmV4cG9ydCBjb25zdCBzbWFDcm9zc292ZXJTdHJhdGVneTogU3RyYXRlZ3kgPSB7XG4gIGlkOiAnc21hX2Nyb3Nzb3ZlcicsXG4gIG5hbWU6ICdTTUEgQ3Jvc3NvdmVyJyxcbiAgZGVzY3JpcHRpb246ICdGYXN0IFNNQSAoOSkgY3Jvc3NpbmcgU2xvdyBTTUEgKDIxKScsXG4gIGluZGljYXRvcnM6IFtcbiAgICB7XG4gICAgICBuYW1lOiAnRmFzdCBTTUEgKDkpJyxcbiAgICAgIGRhdGE6IFtdXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnU2xvdyBTTUEgKDIxKScsXG4gICAgICBkYXRhOiBbXVxuICAgIH1cbiAgXSxcbiAgYW5hbHl6ZTogKGRhdGEpID0+IHtcbiAgICBjb25zdCBwcmljZXMgPSBkYXRhLm1hcChkID0+IGQuY2xvc2UpO1xuICAgIGNvbnN0IGZhc3RTTUEgPSBjYWxjdWxhdGVTTUEocHJpY2VzLCA5KTtcbiAgICBjb25zdCBzbG93U01BID0gY2FsY3VsYXRlU01BKHByaWNlcywgMjEpO1xuXG4gICAgLy8gTmVlZCBhdCBsZWFzdCB0d28gcG9pbnRzIHRvIGRldGVjdCBhIGNyb3Nzb3ZlclxuICAgIGlmIChmYXN0U01BLmxlbmd0aCA8IDIpIHJldHVybiBudWxsO1xuXG4gICAgY29uc3QgbGFzdCA9IGZhc3RTTUEubGVuZ3RoIC0gMTtcbiAgICBjb25zdCBwcmV2ID0gbGFzdCAtIDE7XG5cbiAgICAvLyBDaGVjayBmb3IgY3Jvc3NvdmVyc1xuICAgIGlmICghaXNOYU4oZmFzdFNNQVtwcmV2XSkgJiYgIWlzTmFOKHNsb3dTTUFbcHJldl0pICYmIFxuICAgICAgICAhaXNOYU4oZmFzdFNNQVtsYXN0XSkgJiYgIWlzTmFOKHNsb3dTTUFbbGFzdF0pKSB7XG4gICAgICBcbiAgICAgIC8vIEJ1eSBzaWduYWw6IEZhc3QgU01BIGNyb3NzZXMgYWJvdmUgU2xvdyBTTUFcbiAgICAgIGlmIChmYXN0U01BW3ByZXZdIDw9IHNsb3dTTUFbcHJldl0gJiYgZmFzdFNNQVtsYXN0XSA+IHNsb3dTTUFbbGFzdF0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0eXBlOiAnYnV5JyxcbiAgICAgICAgICBwcmljZTogZGF0YVtsYXN0XS5jbG9zZSxcbiAgICAgICAgICB0aW1lOiBnZXRVbml4VGltZShkYXRhW2xhc3RdLnRpbWUpLFxuICAgICAgICAgIG1lc3NhZ2U6IGBCdXkgU2lnbmFsOiBGYXN0IFNNQSAoJHtmYXN0U01BW2xhc3RdLnRvRml4ZWQoMil9KSBjcm9zc2VkIGFib3ZlIFNsb3cgU01BICgke3Nsb3dTTUFbbGFzdF0udG9GaXhlZCgyKX0pYFxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBTZWxsIHNpZ25hbDogRmFzdCBTTUEgY3Jvc3NlcyBiZWxvdyBTbG93IFNNQVxuICAgICAgaWYgKGZhc3RTTUFbcHJldl0gPj0gc2xvd1NNQVtwcmV2XSAmJiBmYXN0U01BW2xhc3RdIDwgc2xvd1NNQVtsYXN0XSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHR5cGU6ICdzZWxsJyxcbiAgICAgICAgICBwcmljZTogZGF0YVtsYXN0XS5jbG9zZSxcbiAgICAgICAgICB0aW1lOiBnZXRVbml4VGltZShkYXRhW2xhc3RdLnRpbWUpLFxuICAgICAgICAgIG1lc3NhZ2U6IGBTZWxsIFNpZ25hbDogRmFzdCBTTUEgKCR7ZmFzdFNNQVtsYXN0XS50b0ZpeGVkKDIpfSkgY3Jvc3NlZCBiZWxvdyBTbG93IFNNQSAoJHtzbG93U01BW2xhc3RdLnRvRml4ZWQoMil9KWBcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufTsgIl0sIm5hbWVzIjpbImNhbGN1bGF0ZVNNQSIsImRhdGEiLCJwZXJpb2QiLCJzbWEiLCJpIiwicHVzaCIsIk5hTiIsImxlbmd0aCIsInN1bSIsImoiLCJnZXRVbml4VGltZSIsInRpbWUiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwiZ2V0VGltZSIsInllYXIiLCJtb250aCIsImRheSIsInNtYUNyb3Nzb3ZlclN0cmF0ZWd5IiwiaWQiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJpbmRpY2F0b3JzIiwiYW5hbHl6ZSIsInByaWNlcyIsIm1hcCIsImQiLCJjbG9zZSIsImZhc3RTTUEiLCJzbG93U01BIiwibGFzdCIsInByZXYiLCJpc05hTiIsInR5cGUiLCJwcmljZSIsIm1lc3NhZ2UiLCJ0b0ZpeGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/strategies/sma-crossover.ts\n"));

/***/ })

});