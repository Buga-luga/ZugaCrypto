"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/strategies/sma-crossover.ts":
/*!**************************************************!*\
  !*** ./src/services/strategies/sma-crossover.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"(app-pages-browser)/./src/services/strategies/index.ts\");\n\nfunction calculateSMA(data, period) {\n    const sma = [];\n    for(let i = 0; i < data.length; i++){\n        if (i < period - 1) {\n            sma.push(NaN);\n            continue;\n        }\n        let sum = 0;\n        for(let j = 0; j < period; j++){\n            sum += data[i - j];\n        }\n        sma.push(sum / period);\n    }\n    return sma;\n}\n// Create the strategy object\nconst smaCrossoverStrategy = {\n    id: \"sma_crossover\",\n    name: \"SMA Crossover\",\n    description: \"Generates signals based on crossovers between short-term and long-term SMAs\",\n    analyze: (data)=>{\n        const prices = data.map((d)=>d.close);\n        const shortPeriod = 10;\n        const longPeriod = 20;\n        const shortSMA = calculateSMA(prices, shortPeriod);\n        const longSMA = calculateSMA(prices, longPeriod);\n        // Need at least two points to compare crossover\n        if (shortSMA.length < 2 || longSMA.length < 2) return null;\n        const last = shortSMA.length - 1;\n        const prev = last - 1;\n        // Check for crossover\n        const isCrossUp = shortSMA[prev] <= longSMA[prev] && shortSMA[last] > longSMA[last];\n        const isCrossDown = shortSMA[prev] >= longSMA[prev] && shortSMA[last] < longSMA[last];\n        if (isCrossUp) {\n            return {\n                type: \"buy\",\n                price: data[last].close,\n                time: data[last].time\n            };\n        }\n        if (isCrossDown) {\n            return {\n                type: \"sell\",\n                price: data[last].close,\n                time: data[last].time\n            };\n        }\n        return null;\n    },\n    indicators: [\n        {\n            name: \"Short SMA\",\n            data: []\n        },\n        {\n            name: \"Long SMA\",\n            data: []\n        }\n    ]\n};\n// Register the strategy\n(0,_index__WEBPACK_IMPORTED_MODULE_0__.registerStrategy)(smaCrossoverStrategy);\n// Export the strategy object\n/* harmony default export */ __webpack_exports__[\"default\"] = (smaCrossoverStrategy);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9zdHJhdGVnaWVzL3NtYS1jcm9zc292ZXIudHMiLCJtYXBwaW5ncyI6Ijs7QUFDcUU7QUFFckUsU0FBU0MsYUFBYUMsSUFBYyxFQUFFQyxNQUFjO0lBQ2xELE1BQU1DLE1BQWdCLEVBQUU7SUFDeEIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlILEtBQUtJLE1BQU0sRUFBRUQsSUFBSztRQUNwQyxJQUFJQSxJQUFJRixTQUFTLEdBQUc7WUFDbEJDLElBQUlHLElBQUksQ0FBQ0M7WUFDVDtRQUNGO1FBRUEsSUFBSUMsTUFBTTtRQUNWLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJUCxRQUFRTyxJQUFLO1lBQy9CRCxPQUFPUCxJQUFJLENBQUNHLElBQUlLLEVBQUU7UUFDcEI7UUFDQU4sSUFBSUcsSUFBSSxDQUFDRSxNQUFNTjtJQUNqQjtJQUNBLE9BQU9DO0FBQ1Q7QUFFQSw2QkFBNkI7QUFDN0IsTUFBTU8sdUJBQWlDO0lBQ3JDQyxJQUFJO0lBQ0pDLE1BQU07SUFDTkMsYUFBYTtJQUNiQyxTQUFTLENBQUNiO1FBQ1IsTUFBTWMsU0FBU2QsS0FBS2UsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxLQUFLO1FBQ3BDLE1BQU1DLGNBQWM7UUFDcEIsTUFBTUMsYUFBYTtRQUVuQixNQUFNQyxXQUFXckIsYUFBYWUsUUFBUUk7UUFDdEMsTUFBTUcsVUFBVXRCLGFBQWFlLFFBQVFLO1FBRXJDLGdEQUFnRDtRQUNoRCxJQUFJQyxTQUFTaEIsTUFBTSxHQUFHLEtBQUtpQixRQUFRakIsTUFBTSxHQUFHLEdBQUcsT0FBTztRQUV0RCxNQUFNa0IsT0FBT0YsU0FBU2hCLE1BQU0sR0FBRztRQUMvQixNQUFNbUIsT0FBT0QsT0FBTztRQUVwQixzQkFBc0I7UUFDdEIsTUFBTUUsWUFBWUosUUFBUSxDQUFDRyxLQUFLLElBQUlGLE9BQU8sQ0FBQ0UsS0FBSyxJQUFJSCxRQUFRLENBQUNFLEtBQUssR0FBR0QsT0FBTyxDQUFDQyxLQUFLO1FBQ25GLE1BQU1HLGNBQWNMLFFBQVEsQ0FBQ0csS0FBSyxJQUFJRixPQUFPLENBQUNFLEtBQUssSUFBSUgsUUFBUSxDQUFDRSxLQUFLLEdBQUdELE9BQU8sQ0FBQ0MsS0FBSztRQUVyRixJQUFJRSxXQUFXO1lBQ2IsT0FBTztnQkFDTEUsTUFBTTtnQkFDTkMsT0FBTzNCLElBQUksQ0FBQ3NCLEtBQUssQ0FBQ0wsS0FBSztnQkFDdkJXLE1BQU01QixJQUFJLENBQUNzQixLQUFLLENBQUNNLElBQUk7WUFDdkI7UUFDRjtRQUVBLElBQUlILGFBQWE7WUFDZixPQUFPO2dCQUNMQyxNQUFNO2dCQUNOQyxPQUFPM0IsSUFBSSxDQUFDc0IsS0FBSyxDQUFDTCxLQUFLO2dCQUN2QlcsTUFBTTVCLElBQUksQ0FBQ3NCLEtBQUssQ0FBQ00sSUFBSTtZQUN2QjtRQUNGO1FBRUEsT0FBTztJQUNUO0lBQ0FDLFlBQVk7UUFDVjtZQUNFbEIsTUFBTTtZQUNOWCxNQUFNLEVBQUU7UUFDVjtRQUNBO1lBQ0VXLE1BQU07WUFDTlgsTUFBTSxFQUFFO1FBQ1Y7S0FDRDtBQUNIO0FBRUEsd0JBQXdCO0FBQ3hCRix3REFBZ0JBLENBQUNXO0FBRWpCLDZCQUE2QjtBQUM3QiwrREFBZUEsb0JBQW9CQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zZXJ2aWNlcy9zdHJhdGVnaWVzL3NtYS1jcm9zc292ZXIudHM/NDdhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYW5kbGVzdGlja0RhdGEgfSBmcm9tICdsaWdodHdlaWdodC1jaGFydHMnO1xyXG5pbXBvcnQgeyBTdHJhdGVneSwgU3RyYXRlZ3lTaWduYWwsIHJlZ2lzdGVyU3RyYXRlZ3kgfSBmcm9tICcuL2luZGV4JztcclxuXHJcbmZ1bmN0aW9uIGNhbGN1bGF0ZVNNQShkYXRhOiBudW1iZXJbXSwgcGVyaW9kOiBudW1iZXIpOiBudW1iZXJbXSB7XHJcbiAgY29uc3Qgc21hOiBudW1iZXJbXSA9IFtdO1xyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgaWYgKGkgPCBwZXJpb2QgLSAxKSB7XHJcbiAgICAgIHNtYS5wdXNoKE5hTik7XHJcbiAgICAgIGNvbnRpbnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBzdW0gPSAwO1xyXG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBwZXJpb2Q7IGorKykge1xyXG4gICAgICBzdW0gKz0gZGF0YVtpIC0gal07XHJcbiAgICB9XHJcbiAgICBzbWEucHVzaChzdW0gLyBwZXJpb2QpO1xyXG4gIH1cclxuICByZXR1cm4gc21hO1xyXG59XHJcblxyXG4vLyBDcmVhdGUgdGhlIHN0cmF0ZWd5IG9iamVjdFxyXG5jb25zdCBzbWFDcm9zc292ZXJTdHJhdGVneTogU3RyYXRlZ3kgPSB7XHJcbiAgaWQ6ICdzbWFfY3Jvc3NvdmVyJyxcclxuICBuYW1lOiAnU01BIENyb3Nzb3ZlcicsXHJcbiAgZGVzY3JpcHRpb246ICdHZW5lcmF0ZXMgc2lnbmFscyBiYXNlZCBvbiBjcm9zc292ZXJzIGJldHdlZW4gc2hvcnQtdGVybSBhbmQgbG9uZy10ZXJtIFNNQXMnLFxyXG4gIGFuYWx5emU6IChkYXRhOiBDYW5kbGVzdGlja0RhdGFbXSkgPT4ge1xyXG4gICAgY29uc3QgcHJpY2VzID0gZGF0YS5tYXAoZCA9PiBkLmNsb3NlKTtcclxuICAgIGNvbnN0IHNob3J0UGVyaW9kID0gMTA7XHJcbiAgICBjb25zdCBsb25nUGVyaW9kID0gMjA7XHJcblxyXG4gICAgY29uc3Qgc2hvcnRTTUEgPSBjYWxjdWxhdGVTTUEocHJpY2VzLCBzaG9ydFBlcmlvZCk7XHJcbiAgICBjb25zdCBsb25nU01BID0gY2FsY3VsYXRlU01BKHByaWNlcywgbG9uZ1BlcmlvZCk7XHJcblxyXG4gICAgLy8gTmVlZCBhdCBsZWFzdCB0d28gcG9pbnRzIHRvIGNvbXBhcmUgY3Jvc3NvdmVyXHJcbiAgICBpZiAoc2hvcnRTTUEubGVuZ3RoIDwgMiB8fCBsb25nU01BLmxlbmd0aCA8IDIpIHJldHVybiBudWxsO1xyXG5cclxuICAgIGNvbnN0IGxhc3QgPSBzaG9ydFNNQS5sZW5ndGggLSAxO1xyXG4gICAgY29uc3QgcHJldiA9IGxhc3QgLSAxO1xyXG5cclxuICAgIC8vIENoZWNrIGZvciBjcm9zc292ZXJcclxuICAgIGNvbnN0IGlzQ3Jvc3NVcCA9IHNob3J0U01BW3ByZXZdIDw9IGxvbmdTTUFbcHJldl0gJiYgc2hvcnRTTUFbbGFzdF0gPiBsb25nU01BW2xhc3RdO1xyXG4gICAgY29uc3QgaXNDcm9zc0Rvd24gPSBzaG9ydFNNQVtwcmV2XSA+PSBsb25nU01BW3ByZXZdICYmIHNob3J0U01BW2xhc3RdIDwgbG9uZ1NNQVtsYXN0XTtcclxuXHJcbiAgICBpZiAoaXNDcm9zc1VwKSB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgdHlwZTogJ2J1eScsXHJcbiAgICAgICAgcHJpY2U6IGRhdGFbbGFzdF0uY2xvc2UsXHJcbiAgICAgICAgdGltZTogZGF0YVtsYXN0XS50aW1lIGFzIG51bWJlcixcclxuICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoaXNDcm9zc0Rvd24pIHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICB0eXBlOiAnc2VsbCcsXHJcbiAgICAgICAgcHJpY2U6IGRhdGFbbGFzdF0uY2xvc2UsXHJcbiAgICAgICAgdGltZTogZGF0YVtsYXN0XS50aW1lIGFzIG51bWJlcixcclxuICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9LFxyXG4gIGluZGljYXRvcnM6IFtcclxuICAgIHtcclxuICAgICAgbmFtZTogJ1Nob3J0IFNNQScsXHJcbiAgICAgIGRhdGE6IFtdLCAvLyBUaGlzIHdpbGwgYmUgcG9wdWxhdGVkIHdoZW4gdGhlIHN0cmF0ZWd5IHJ1bnNcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6ICdMb25nIFNNQScsXHJcbiAgICAgIGRhdGE6IFtdLCAvLyBUaGlzIHdpbGwgYmUgcG9wdWxhdGVkIHdoZW4gdGhlIHN0cmF0ZWd5IHJ1bnNcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbi8vIFJlZ2lzdGVyIHRoZSBzdHJhdGVneVxyXG5yZWdpc3RlclN0cmF0ZWd5KHNtYUNyb3Nzb3ZlclN0cmF0ZWd5KTtcclxuXHJcbi8vIEV4cG9ydCB0aGUgc3RyYXRlZ3kgb2JqZWN0XHJcbmV4cG9ydCBkZWZhdWx0IHNtYUNyb3Nzb3ZlclN0cmF0ZWd5OyAiXSwibmFtZXMiOlsicmVnaXN0ZXJTdHJhdGVneSIsImNhbGN1bGF0ZVNNQSIsImRhdGEiLCJwZXJpb2QiLCJzbWEiLCJpIiwibGVuZ3RoIiwicHVzaCIsIk5hTiIsInN1bSIsImoiLCJzbWFDcm9zc292ZXJTdHJhdGVneSIsImlkIiwibmFtZSIsImRlc2NyaXB0aW9uIiwiYW5hbHl6ZSIsInByaWNlcyIsIm1hcCIsImQiLCJjbG9zZSIsInNob3J0UGVyaW9kIiwibG9uZ1BlcmlvZCIsInNob3J0U01BIiwibG9uZ1NNQSIsImxhc3QiLCJwcmV2IiwiaXNDcm9zc1VwIiwiaXNDcm9zc0Rvd24iLCJ0eXBlIiwicHJpY2UiLCJ0aW1lIiwiaW5kaWNhdG9ycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/strategies/sma-crossover.ts\n"));

/***/ })

});