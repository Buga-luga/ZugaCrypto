"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/strategies/index.ts":
/*!******************************************!*\
  !*** ./src/services/strategies/index.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getStrategies: function() { return /* binding */ getStrategies; },\n/* harmony export */   getStrategy: function() { return /* binding */ getStrategy; },\n/* harmony export */   registerStrategy: function() { return /* binding */ registerStrategy; }\n/* harmony export */ });\nclass StrategyRegistry {\n    static getInstance() {\n        if (!StrategyRegistry.instance) {\n            StrategyRegistry.instance = new StrategyRegistry();\n        }\n        return StrategyRegistry.instance;\n    }\n    register(strategy) {\n        this.strategies.set(strategy.id, strategy);\n    }\n    getAll() {\n        return Array.from(this.strategies.values());\n    }\n    get(id) {\n        return this.strategies.get(id);\n    }\n    constructor(){\n        this.strategies = new Map();\n    }\n}\n// Export singleton instance methods\nconst registerStrategy = (strategy)=>StrategyRegistry.getInstance().register(strategy);\nconst getStrategies = ()=>StrategyRegistry.getInstance().getAll();\nconst getStrategy = (id)=>StrategyRegistry.getInstance().get(id);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9zdHJhdGVnaWVzL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQXFCQSxNQUFNQTtJQVFKLE9BQWNDLGNBQWdDO1FBQzVDLElBQUksQ0FBQ0QsaUJBQWlCRSxRQUFRLEVBQUU7WUFDOUJGLGlCQUFpQkUsUUFBUSxHQUFHLElBQUlGO1FBQ2xDO1FBQ0EsT0FBT0EsaUJBQWlCRSxRQUFRO0lBQ2xDO0lBRU9DLFNBQVNDLFFBQWtCLEVBQVE7UUFDeEMsSUFBSSxDQUFDQyxVQUFVLENBQUNDLEdBQUcsQ0FBQ0YsU0FBU0csRUFBRSxFQUFFSDtJQUNuQztJQUVPSSxTQUFxQjtRQUMxQixPQUFPQyxNQUFNQyxJQUFJLENBQUMsSUFBSSxDQUFDTCxVQUFVLENBQUNNLE1BQU07SUFDMUM7SUFFT0MsSUFBSUwsRUFBVSxFQUF3QjtRQUMzQyxPQUFPLElBQUksQ0FBQ0YsVUFBVSxDQUFDTyxHQUFHLENBQUNMO0lBQzdCO0lBckJBLGFBQXNCO1FBQ3BCLElBQUksQ0FBQ0YsVUFBVSxHQUFHLElBQUlRO0lBQ3hCO0FBb0JGO0FBRUEsb0NBQW9DO0FBQzdCLE1BQU1DLG1CQUFtQixDQUFDVixXQUF1QkosaUJBQWlCQyxXQUFXLEdBQUdFLFFBQVEsQ0FBQ0MsVUFBVTtBQUNuRyxNQUFNVyxnQkFBZ0IsSUFBTWYsaUJBQWlCQyxXQUFXLEdBQUdPLE1BQU0sR0FBRztBQUNwRSxNQUFNUSxjQUFjLENBQUNULEtBQWVQLGlCQUFpQkMsV0FBVyxHQUFHVyxHQUFHLENBQUNMLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3NlcnZpY2VzL3N0cmF0ZWdpZXMvaW5kZXgudHM/YzA0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYW5kbGVzdGlja0RhdGEgfSBmcm9tICdsaWdodHdlaWdodC1jaGFydHMnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTdHJhdGVneVNpZ25hbCB7XHJcbiAgdHlwZTogJ2J1eScgfCAnc2VsbCc7XHJcbiAgcHJpY2U6IG51bWJlcjtcclxuICB0aW1lOiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RyYXRlZ3kge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcbiAgYW5hbHl6ZTogKGRhdGE6IENhbmRsZXN0aWNrRGF0YVtdKSA9PiBTdHJhdGVneVNpZ25hbCB8IG51bGw7XHJcbiAgaW5kaWNhdG9ycz86IHtcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIGRhdGE6IGFueVtdO1xyXG4gIH1bXTtcclxufVxyXG5cclxuZXhwb3J0IHR5cGUgU3RyYXRlZ3lJZCA9ICdub25lJyB8ICdzbWFfY3Jvc3NvdmVyJyB8ICdyc2lfZGl2ZXJnZW5jZScgfCAnbWFjZCc7XHJcblxyXG5jbGFzcyBTdHJhdGVneVJlZ2lzdHJ5IHtcclxuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogU3RyYXRlZ3lSZWdpc3RyeTtcclxuICBwcml2YXRlIHN0cmF0ZWdpZXM6IE1hcDxzdHJpbmcsIFN0cmF0ZWd5PjtcclxuXHJcbiAgcHJpdmF0ZSBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuc3RyYXRlZ2llcyA9IG5ldyBNYXAoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzdGF0aWMgZ2V0SW5zdGFuY2UoKTogU3RyYXRlZ3lSZWdpc3RyeSB7XHJcbiAgICBpZiAoIVN0cmF0ZWd5UmVnaXN0cnkuaW5zdGFuY2UpIHtcclxuICAgICAgU3RyYXRlZ3lSZWdpc3RyeS5pbnN0YW5jZSA9IG5ldyBTdHJhdGVneVJlZ2lzdHJ5KCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gU3RyYXRlZ3lSZWdpc3RyeS5pbnN0YW5jZTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyByZWdpc3RlcihzdHJhdGVneTogU3RyYXRlZ3kpOiB2b2lkIHtcclxuICAgIHRoaXMuc3RyYXRlZ2llcy5zZXQoc3RyYXRlZ3kuaWQsIHN0cmF0ZWd5KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRBbGwoKTogU3RyYXRlZ3lbXSB7XHJcbiAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLnN0cmF0ZWdpZXMudmFsdWVzKCkpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldChpZDogc3RyaW5nKTogU3RyYXRlZ3kgfCB1bmRlZmluZWQge1xyXG4gICAgcmV0dXJuIHRoaXMuc3RyYXRlZ2llcy5nZXQoaWQpO1xyXG4gIH1cclxufVxyXG5cclxuLy8gRXhwb3J0IHNpbmdsZXRvbiBpbnN0YW5jZSBtZXRob2RzXHJcbmV4cG9ydCBjb25zdCByZWdpc3RlclN0cmF0ZWd5ID0gKHN0cmF0ZWd5OiBTdHJhdGVneSkgPT4gU3RyYXRlZ3lSZWdpc3RyeS5nZXRJbnN0YW5jZSgpLnJlZ2lzdGVyKHN0cmF0ZWd5KTtcclxuZXhwb3J0IGNvbnN0IGdldFN0cmF0ZWdpZXMgPSAoKSA9PiBTdHJhdGVneVJlZ2lzdHJ5LmdldEluc3RhbmNlKCkuZ2V0QWxsKCk7XHJcbmV4cG9ydCBjb25zdCBnZXRTdHJhdGVneSA9IChpZDogc3RyaW5nKSA9PiBTdHJhdGVneVJlZ2lzdHJ5LmdldEluc3RhbmNlKCkuZ2V0KGlkKTsgIl0sIm5hbWVzIjpbIlN0cmF0ZWd5UmVnaXN0cnkiLCJnZXRJbnN0YW5jZSIsImluc3RhbmNlIiwicmVnaXN0ZXIiLCJzdHJhdGVneSIsInN0cmF0ZWdpZXMiLCJzZXQiLCJpZCIsImdldEFsbCIsIkFycmF5IiwiZnJvbSIsInZhbHVlcyIsImdldCIsIk1hcCIsInJlZ2lzdGVyU3RyYXRlZ3kiLCJnZXRTdHJhdGVnaWVzIiwiZ2V0U3RyYXRlZ3kiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/strategies/index.ts\n"));

/***/ })

});