"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/Chart/CandlestickChart.tsx":
/*!***************************************************!*\
  !*** ./src/components/Chart/CandlestickChart.tsx ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CandlestickChart: function() { return /* binding */ CandlestickChart; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lightweight_charts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightweight-charts */ \"(app-pages-browser)/./node_modules/lightweight-charts/dist/lightweight-charts.development.mjs\");\n/* harmony import */ var _services_api_cryptoCompareAPI__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/api/cryptoCompareAPI */ \"(app-pages-browser)/./src/services/api/cryptoCompareAPI.ts\");\n/* __next_internal_client_entry_do_not_use__ CandlestickChart auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction CandlestickChart(param) {\n    let { timeframe } = param;\n    _s();\n    const chartContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [currentPrice, setCurrentPrice] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [selectedStrategy, setSelectedStrategy] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"none\");\n    const candleSeriesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const currentCandleRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const emaSeriesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Calculate EMA\n    const calculateEMA = function(data) {\n        let period = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 20;\n        const emaData = [];\n        const multiplier = 2 / (period + 1);\n        let ema = data[0].close;\n        for(let i = 0; i < data.length; i++){\n            const candle = data[i];\n            ema = (candle.close - ema) * multiplier + ema;\n            emaData.push({\n                time: candle.time,\n                value: ema\n            });\n        }\n        return emaData;\n    };\n    // Update EMA overlay\n    const updateEMAOverlay = (candles)=>{\n        if (!chartRef.current) return;\n        // Remove existing EMA series if it exists\n        if (emaSeriesRef.current) {\n            chartRef.current.removeSeries(emaSeriesRef.current);\n            emaSeriesRef.current = null;\n        }\n        if (selectedStrategy === \"ema\") {\n            const emaSeries = chartRef.current.addLineSeries({\n                color: \"#2962FF\",\n                lineWidth: 2,\n                priceLineVisible: false\n            });\n            const emaData = calculateEMA(candles);\n            emaSeries.setData(emaData);\n            emaSeriesRef.current = emaSeries;\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!chartContainerRef.current) return;\n        const chartOptions = {\n            layout: {\n                background: {\n                    color: \"#1E222D\"\n                },\n                textColor: \"#DDD\"\n            },\n            grid: {\n                vertLines: {\n                    color: \"#2B2B43\"\n                },\n                horzLines: {\n                    color: \"#2B2B43\"\n                }\n            },\n            crosshair: {\n                mode: 1,\n                vertLine: {\n                    width: 1,\n                    color: \"#758696\",\n                    style: 3\n                },\n                horzLine: {\n                    width: 1,\n                    color: \"#758696\",\n                    style: 3\n                }\n            },\n            timeScale: {\n                borderColor: \"#2B2B43\",\n                timeVisible: true,\n                secondsVisible: false,\n                fixLeftEdge: true,\n                rightOffset: 12,\n                barSpacing: 6,\n                minBarSpacing: 2,\n                rightBarStaysOnScroll: true,\n                lockVisibleTimeRangeOnResize: true,\n                tickMarkFormatter: (time)=>{\n                    const date = new Date(time * 1000);\n                    if (timeframe === \"1d\" || timeframe === \"1w\") {\n                        return date.toLocaleDateString();\n                    }\n                    return date.toLocaleTimeString([], {\n                        hour: \"2-digit\",\n                        minute: \"2-digit\"\n                    });\n                }\n            },\n            rightPriceScale: {\n                borderColor: \"#2B2B43\",\n                autoScale: true,\n                scaleMargins: {\n                    top: 0.2,\n                    bottom: 0.2\n                },\n                entireTextOnly: true\n            },\n            handleScale: {\n                axisPressedMouseMove: {\n                    time: true,\n                    price: true\n                },\n                mouseWheel: true,\n                pinch: true\n            },\n            handleScroll: {\n                mouseWheel: true,\n                pressedMouseMove: true,\n                horzTouchDrag: true,\n                vertTouchDrag: true\n            }\n        };\n        const chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(chartContainerRef.current, {\n            ...chartOptions,\n            width: chartContainerRef.current.clientWidth,\n            height: chartContainerRef.current.clientHeight\n        });\n        const candlestickSeries = chart.addCandlestickSeries({\n            upColor: \"#26a69a\",\n            downColor: \"#ef5350\",\n            borderVisible: false,\n            wickUpColor: \"#26a69a\",\n            wickDownColor: \"#ef5350\",\n            priceFormat: {\n                type: \"price\",\n                precision: 2,\n                minMove: 0.01\n            }\n        });\n        candleSeriesRef.current = candlestickSeries;\n        chartRef.current = chart;\n        // Fetch historical data first\n        (0,_services_api_cryptoCompareAPI__WEBPACK_IMPORTED_MODULE_3__.getHistoricalData)(timeframe).then((data)=>{\n            if (data) {\n                const candles = data.map((d)=>({\n                        time: d.time,\n                        open: d.open,\n                        high: d.high,\n                        low: d.low,\n                        close: d.close\n                    }));\n                candlestickSeries.setData(candles);\n                updateEMAOverlay(candles);\n                // Set up the current candle\n                const lastCandle = candles[candles.length - 1];\n                const currentTime = Math.floor(Date.now() / 1000);\n                const interval = timeframe === \"1w\" ? 604800 : timeframe === \"1d\" ? 86400 : timeframe === \"4h\" ? 14400 : timeframe === \"1h\" ? 3600 : timeframe === \"30m\" ? 1800 : timeframe === \"15m\" ? 900 : timeframe === \"5m\" ? 300 : 60;\n                const currentInterval = Math.floor(currentTime / interval) * interval;\n                currentCandleRef.current = {\n                    time: currentInterval,\n                    open: lastCandle.close,\n                    high: lastCandle.close,\n                    low: lastCandle.close,\n                    close: lastCandle.close\n                };\n                // Set visible range based on timeframe\n                const timeScale = chart.timeScale();\n                const visibleBars = timeframe === \"1w\" ? 52 : timeframe === \"1d\" ? 90 : timeframe === \"4h\" ? 180 : timeframe === \"1h\" ? 168 : 240; // 4 hours for smaller timeframes\n                const timeRange = interval * visibleBars;\n                const fromTime = currentTime - timeRange;\n                const toTime = currentTime + interval * 2;\n                timeScale.setVisibleRange({\n                    from: fromTime,\n                    to: toTime\n                });\n                timeScale.fitContent();\n            }\n        }).catch(console.error);\n        // Subscribe to real-time price updates\n        const unsubscribePrice = (0,_services_api_cryptoCompareAPI__WEBPACK_IMPORTED_MODULE_3__.subscribeToPrice)((param)=>{\n            let { time, value } = param;\n            var _chartRef_current;\n            // Update current price display immediately\n            setCurrentPrice(value.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n            }));\n            // Update or create new candle\n            if (!currentCandleRef.current) {\n                const interval = timeframe === \"1w\" ? 604800 : timeframe === \"1d\" ? 86400 : timeframe === \"4h\" ? 14400 : timeframe === \"1h\" ? 3600 : timeframe === \"30m\" ? 1800 : timeframe === \"15m\" ? 900 : timeframe === \"5m\" ? 300 : 60;\n                const currentInterval = Math.floor(time / interval) * interval;\n                currentCandleRef.current = {\n                    time: currentInterval,\n                    open: value,\n                    high: value,\n                    low: value,\n                    close: value\n                };\n            } else {\n                const interval = timeframe === \"1w\" ? 604800 : timeframe === \"1d\" ? 86400 : timeframe === \"4h\" ? 14400 : timeframe === \"1h\" ? 3600 : timeframe === \"30m\" ? 1800 : timeframe === \"15m\" ? 900 : timeframe === \"5m\" ? 300 : 60;\n                const currentInterval = Math.floor(time / interval) * interval;\n                const candleInterval = Math.floor(currentCandleRef.current.time / interval) * interval;\n                if (currentInterval > candleInterval) {\n                    // Save the completed candle\n                    const completedCandle = {\n                        ...currentCandleRef.current\n                    };\n                    candleSeriesRef.current.update(completedCandle);\n                    // Create new candle\n                    currentCandleRef.current = {\n                        time: currentInterval,\n                        open: value,\n                        high: value,\n                        low: value,\n                        close: value\n                    };\n                } else {\n                    // Update current candle\n                    currentCandleRef.current.high = Math.max(currentCandleRef.current.high, value);\n                    currentCandleRef.current.low = Math.min(currentCandleRef.current.low, value);\n                    currentCandleRef.current.close = value;\n                    // Update the candlestick immediately\n                    candleSeriesRef.current.update(currentCandleRef.current);\n                }\n            }\n            // Auto-scroll if we're at the right edge\n            const timeScale = (_chartRef_current = chartRef.current) === null || _chartRef_current === void 0 ? void 0 : _chartRef_current.timeScale();\n            if (timeScale) {\n                const logicalRange = timeScale.getVisibleLogicalRange();\n                if (logicalRange && logicalRange.to >= currentCandleRef.current.time - 5) {\n                    timeScale.scrollToPosition(1, false);\n                }\n            }\n        }, timeframe);\n        const handleResize = ()=>{\n            if (chartContainerRef.current && chartRef.current) {\n                chartRef.current.applyOptions({\n                    width: chartContainerRef.current.clientWidth,\n                    height: chartContainerRef.current.clientHeight\n                });\n            }\n        };\n        window.addEventListener(\"resize\", handleResize);\n        return ()=>{\n            window.removeEventListener(\"resize\", handleResize);\n            if (chartRef.current) {\n                chartRef.current.remove();\n            }\n            unsubscribePrice();\n        };\n    }, [\n        timeframe\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative w-full h-full\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: chartContainerRef,\n                className: \"w-full h-full\"\n            }, void 0, false, {\n                fileName: \"e:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n                lineNumber: 309,\n                columnNumber: 7\n            }, this),\n            currentPrice && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute top-4 left-4 bg-[#2B2B43] px-4 py-2 rounded-lg shadow-lg\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col gap-2\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center gap-3\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-gray-400\",\n                                    children: \"BTC/USD\"\n                                }, void 0, false, {\n                                    fileName: \"e:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n                                    lineNumber: 314,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-2xl font-semibold text-white\",\n                                    children: [\n                                        \"$\",\n                                        currentPrice\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"e:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n                                    lineNumber: 315,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"e:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n                            lineNumber: 313,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center gap-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-gray-400\",\n                                    children: \"Strategy:\"\n                                }, void 0, false, {\n                                    fileName: \"e:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n                                    lineNumber: 318,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                    className: \"bg-[#1E222D] text-white px-2 py-1 rounded border border-gray-700\",\n                                    value: selectedStrategy,\n                                    onChange: (e)=>{\n                                        setSelectedStrategy(e.target.value);\n                                        if (candleSeriesRef.current) {\n                                            const data = candleSeriesRef.current.data();\n                                            updateEMAOverlay(data);\n                                        }\n                                    },\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                            value: \"none\",\n                                            children: \"None\"\n                                        }, void 0, false, {\n                                            fileName: \"e:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n                                            lineNumber: 330,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                            value: \"ema\",\n                                            children: \"EMA (20)\"\n                                        }, void 0, false, {\n                                            fileName: \"e:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n                                            lineNumber: 331,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"e:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n                                    lineNumber: 319,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"e:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n                            lineNumber: 317,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"e:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n                    lineNumber: 312,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"e:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n                lineNumber: 311,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"e:\\\\Programming\\\\ZugaCrypto\\\\src\\\\components\\\\Chart\\\\CandlestickChart.tsx\",\n        lineNumber: 308,\n        columnNumber: 5\n    }, this);\n}\n_s(CandlestickChart, \"bqoVmbINSI5l4z1bZI0qGp8xXmw=\");\n_c = CandlestickChart;\nvar _c;\n$RefreshReg$(_c, \"CandlestickChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Chart/CandlestickChart.tsx\n"));

/***/ })

});