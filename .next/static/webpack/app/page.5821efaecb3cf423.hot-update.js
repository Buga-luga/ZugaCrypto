"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/strategies/sma-crossover.ts":
/*!**************************************************!*\
  !*** ./src/services/strategies/sma-crossover.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   smaCrossoverStrategy: function() { return /* binding */ smaCrossoverStrategy; }\n/* harmony export */ });\n// Calculate Simple Moving Average (SMA)\nfunction calculateSMA(data, period) {\n    const sma = [];\n    // Fill initial values with NaN until we have enough data\n    for(let i = 0; i < period - 1; i++){\n        sma.push(NaN);\n    }\n    // Calculate SMA for each point after the initial period\n    for(let i = period - 1; i < data.length; i++){\n        let sum = 0;\n        for(let j = 0; j < period; j++){\n            sum += data[i - j];\n        }\n        sma.push(sum / period);\n    }\n    return sma;\n}\nconst smaCrossoverStrategy = {\n    id: \"sma_crossover\",\n    name: \"SMA Crossover\",\n    description: \"Fast SMA (9) crossing Slow SMA (21)\",\n    indicators: [\n        {\n            name: \"Fast SMA (9)\",\n            data: []\n        },\n        {\n            name: \"Slow SMA (21)\",\n            data: []\n        }\n    ],\n    analyze: (data)=>{\n        const prices = data.map((d)=>d.close);\n        const fastSMA = calculateSMA(prices, 9);\n        const slowSMA = calculateSMA(prices, 21);\n        // Need at least two points to detect a crossover\n        if (fastSMA.length < 2) return null;\n        const last = fastSMA.length - 1;\n        const prev = last - 1;\n        // Check for crossovers\n        if (!isNaN(fastSMA[prev]) && !isNaN(slowSMA[prev]) && !isNaN(fastSMA[last]) && !isNaN(slowSMA[last])) {\n            // Buy signal: Fast SMA crosses above Slow SMA\n            if (fastSMA[prev] <= slowSMA[prev] && fastSMA[last] > slowSMA[last]) {\n                return {\n                    type: \"buy\",\n                    price: data[last].close,\n                    time: typeof data[last].time === \"number\" ? data[last].time : Math.floor(new Date(data[last].time).getTime() / 1000),\n                    message: \"Buy Signal: Fast SMA (\".concat(fastSMA[last].toFixed(2), \") crossed above Slow SMA (\").concat(slowSMA[last].toFixed(2), \")\")\n                };\n            }\n            // Sell signal: Fast SMA crosses below Slow SMA\n            if (fastSMA[prev] >= slowSMA[prev] && fastSMA[last] < slowSMA[last]) {\n                return {\n                    type: \"sell\",\n                    price: data[last].close,\n                    time: typeof data[last].time === \"number\" ? data[last].time : Math.floor(new Date(data[last].time).getTime() / 1000),\n                    message: \"Sell Signal: Fast SMA (\".concat(fastSMA[last].toFixed(2), \") crossed below Slow SMA (\").concat(slowSMA[last].toFixed(2), \")\")\n                };\n            }\n        }\n        return null;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9zdHJhdGVnaWVzL3NtYS1jcm9zc292ZXIudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUdBLHdDQUF3QztBQUN4QyxTQUFTQSxhQUFhQyxJQUFjLEVBQUVDLE1BQWM7SUFDbEQsTUFBTUMsTUFBZ0IsRUFBRTtJQUV4Qix5REFBeUQ7SUFDekQsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlGLFNBQVMsR0FBR0UsSUFBSztRQUNuQ0QsSUFBSUUsSUFBSSxDQUFDQztJQUNYO0lBRUEsd0RBQXdEO0lBQ3hELElBQUssSUFBSUYsSUFBSUYsU0FBUyxHQUFHRSxJQUFJSCxLQUFLTSxNQUFNLEVBQUVILElBQUs7UUFDN0MsSUFBSUksTUFBTTtRQUNWLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJUCxRQUFRTyxJQUFLO1lBQy9CRCxPQUFPUCxJQUFJLENBQUNHLElBQUlLLEVBQUU7UUFDcEI7UUFDQU4sSUFBSUUsSUFBSSxDQUFDRyxNQUFNTjtJQUNqQjtJQUVBLE9BQU9DO0FBQ1Q7QUFFTyxNQUFNTyx1QkFBaUM7SUFDNUNDLElBQUk7SUFDSkMsTUFBTTtJQUNOQyxhQUFhO0lBQ2JDLFlBQVk7UUFDVjtZQUNFRixNQUFNO1lBQ05YLE1BQU0sRUFBRTtRQUNWO1FBQ0E7WUFDRVcsTUFBTTtZQUNOWCxNQUFNLEVBQUU7UUFDVjtLQUNEO0lBQ0RjLFNBQVMsQ0FBQ2Q7UUFDUixNQUFNZSxTQUFTZixLQUFLZ0IsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxLQUFLO1FBQ3BDLE1BQU1DLFVBQVVwQixhQUFhZ0IsUUFBUTtRQUNyQyxNQUFNSyxVQUFVckIsYUFBYWdCLFFBQVE7UUFFckMsaURBQWlEO1FBQ2pELElBQUlJLFFBQVFiLE1BQU0sR0FBRyxHQUFHLE9BQU87UUFFL0IsTUFBTWUsT0FBT0YsUUFBUWIsTUFBTSxHQUFHO1FBQzlCLE1BQU1nQixPQUFPRCxPQUFPO1FBRXBCLHVCQUF1QjtRQUN2QixJQUFJLENBQUNFLE1BQU1KLE9BQU8sQ0FBQ0csS0FBSyxLQUFLLENBQUNDLE1BQU1ILE9BQU8sQ0FBQ0UsS0FBSyxLQUM3QyxDQUFDQyxNQUFNSixPQUFPLENBQUNFLEtBQUssS0FBSyxDQUFDRSxNQUFNSCxPQUFPLENBQUNDLEtBQUssR0FBRztZQUVsRCw4Q0FBOEM7WUFDOUMsSUFBSUYsT0FBTyxDQUFDRyxLQUFLLElBQUlGLE9BQU8sQ0FBQ0UsS0FBSyxJQUFJSCxPQUFPLENBQUNFLEtBQUssR0FBR0QsT0FBTyxDQUFDQyxLQUFLLEVBQUU7Z0JBQ25FLE9BQU87b0JBQ0xHLE1BQU07b0JBQ05DLE9BQU96QixJQUFJLENBQUNxQixLQUFLLENBQUNILEtBQUs7b0JBQ3ZCUSxNQUFNLE9BQU8xQixJQUFJLENBQUNxQixLQUFLLENBQUNLLElBQUksS0FBSyxXQUFXMUIsSUFBSSxDQUFDcUIsS0FBSyxDQUFDSyxJQUFJLEdBQUdDLEtBQUtDLEtBQUssQ0FBQyxJQUFJQyxLQUFLN0IsSUFBSSxDQUFDcUIsS0FBSyxDQUFDSyxJQUFJLEVBQUVJLE9BQU8sS0FBSztvQkFDL0dDLFNBQVMseUJBQThFWCxPQUFyREQsT0FBTyxDQUFDRSxLQUFLLENBQUNXLE9BQU8sQ0FBQyxJQUFHLDhCQUFxRCxPQUF6QlosT0FBTyxDQUFDQyxLQUFLLENBQUNXLE9BQU8sQ0FBQyxJQUFHO2dCQUNsSDtZQUNGO1lBRUEsK0NBQStDO1lBQy9DLElBQUliLE9BQU8sQ0FBQ0csS0FBSyxJQUFJRixPQUFPLENBQUNFLEtBQUssSUFBSUgsT0FBTyxDQUFDRSxLQUFLLEdBQUdELE9BQU8sQ0FBQ0MsS0FBSyxFQUFFO2dCQUNuRSxPQUFPO29CQUNMRyxNQUFNO29CQUNOQyxPQUFPekIsSUFBSSxDQUFDcUIsS0FBSyxDQUFDSCxLQUFLO29CQUN2QlEsTUFBTSxPQUFPMUIsSUFBSSxDQUFDcUIsS0FBSyxDQUFDSyxJQUFJLEtBQUssV0FBVzFCLElBQUksQ0FBQ3FCLEtBQUssQ0FBQ0ssSUFBSSxHQUFHQyxLQUFLQyxLQUFLLENBQUMsSUFBSUMsS0FBSzdCLElBQUksQ0FBQ3FCLEtBQUssQ0FBQ0ssSUFBSSxFQUFFSSxPQUFPLEtBQUs7b0JBQy9HQyxTQUFTLDBCQUErRVgsT0FBckRELE9BQU8sQ0FBQ0UsS0FBSyxDQUFDVyxPQUFPLENBQUMsSUFBRyw4QkFBcUQsT0FBekJaLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDVyxPQUFPLENBQUMsSUFBRztnQkFDbkg7WUFDRjtRQUNGO1FBRUEsT0FBTztJQUNUO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2VydmljZXMvc3RyYXRlZ2llcy9zbWEtY3Jvc3NvdmVyLnRzPzQ3YTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RyYXRlZ3ksIFN0cmF0ZWd5U2lnbmFsIH0gZnJvbSAnLi9pbmRleCc7XG5pbXBvcnQgeyBUaW1lIH0gZnJvbSAnbGlnaHR3ZWlnaHQtY2hhcnRzJztcblxuLy8gQ2FsY3VsYXRlIFNpbXBsZSBNb3ZpbmcgQXZlcmFnZSAoU01BKVxuZnVuY3Rpb24gY2FsY3VsYXRlU01BKGRhdGE6IG51bWJlcltdLCBwZXJpb2Q6IG51bWJlcik6IG51bWJlcltdIHtcbiAgY29uc3Qgc21hOiBudW1iZXJbXSA9IFtdO1xuICBcbiAgLy8gRmlsbCBpbml0aWFsIHZhbHVlcyB3aXRoIE5hTiB1bnRpbCB3ZSBoYXZlIGVub3VnaCBkYXRhXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcGVyaW9kIC0gMTsgaSsrKSB7XG4gICAgc21hLnB1c2goTmFOKTtcbiAgfVxuXG4gIC8vIENhbGN1bGF0ZSBTTUEgZm9yIGVhY2ggcG9pbnQgYWZ0ZXIgdGhlIGluaXRpYWwgcGVyaW9kXG4gIGZvciAobGV0IGkgPSBwZXJpb2QgLSAxOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgIGxldCBzdW0gPSAwO1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgcGVyaW9kOyBqKyspIHtcbiAgICAgIHN1bSArPSBkYXRhW2kgLSBqXTtcbiAgICB9XG4gICAgc21hLnB1c2goc3VtIC8gcGVyaW9kKTtcbiAgfVxuXG4gIHJldHVybiBzbWE7XG59XG5cbmV4cG9ydCBjb25zdCBzbWFDcm9zc292ZXJTdHJhdGVneTogU3RyYXRlZ3kgPSB7XG4gIGlkOiAnc21hX2Nyb3Nzb3ZlcicsXG4gIG5hbWU6ICdTTUEgQ3Jvc3NvdmVyJyxcbiAgZGVzY3JpcHRpb246ICdGYXN0IFNNQSAoOSkgY3Jvc3NpbmcgU2xvdyBTTUEgKDIxKScsXG4gIGluZGljYXRvcnM6IFtcbiAgICB7XG4gICAgICBuYW1lOiAnRmFzdCBTTUEgKDkpJyxcbiAgICAgIGRhdGE6IFtdXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnU2xvdyBTTUEgKDIxKScsXG4gICAgICBkYXRhOiBbXVxuICAgIH1cbiAgXSxcbiAgYW5hbHl6ZTogKGRhdGEpID0+IHtcbiAgICBjb25zdCBwcmljZXMgPSBkYXRhLm1hcChkID0+IGQuY2xvc2UpO1xuICAgIGNvbnN0IGZhc3RTTUEgPSBjYWxjdWxhdGVTTUEocHJpY2VzLCA5KTtcbiAgICBjb25zdCBzbG93U01BID0gY2FsY3VsYXRlU01BKHByaWNlcywgMjEpO1xuXG4gICAgLy8gTmVlZCBhdCBsZWFzdCB0d28gcG9pbnRzIHRvIGRldGVjdCBhIGNyb3Nzb3ZlclxuICAgIGlmIChmYXN0U01BLmxlbmd0aCA8IDIpIHJldHVybiBudWxsO1xuXG4gICAgY29uc3QgbGFzdCA9IGZhc3RTTUEubGVuZ3RoIC0gMTtcbiAgICBjb25zdCBwcmV2ID0gbGFzdCAtIDE7XG5cbiAgICAvLyBDaGVjayBmb3IgY3Jvc3NvdmVyc1xuICAgIGlmICghaXNOYU4oZmFzdFNNQVtwcmV2XSkgJiYgIWlzTmFOKHNsb3dTTUFbcHJldl0pICYmIFxuICAgICAgICAhaXNOYU4oZmFzdFNNQVtsYXN0XSkgJiYgIWlzTmFOKHNsb3dTTUFbbGFzdF0pKSB7XG4gICAgICBcbiAgICAgIC8vIEJ1eSBzaWduYWw6IEZhc3QgU01BIGNyb3NzZXMgYWJvdmUgU2xvdyBTTUFcbiAgICAgIGlmIChmYXN0U01BW3ByZXZdIDw9IHNsb3dTTUFbcHJldl0gJiYgZmFzdFNNQVtsYXN0XSA+IHNsb3dTTUFbbGFzdF0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0eXBlOiAnYnV5JyxcbiAgICAgICAgICBwcmljZTogZGF0YVtsYXN0XS5jbG9zZSxcbiAgICAgICAgICB0aW1lOiB0eXBlb2YgZGF0YVtsYXN0XS50aW1lID09PSAnbnVtYmVyJyA/IGRhdGFbbGFzdF0udGltZSA6IE1hdGguZmxvb3IobmV3IERhdGUoZGF0YVtsYXN0XS50aW1lKS5nZXRUaW1lKCkgLyAxMDAwKSxcbiAgICAgICAgICBtZXNzYWdlOiBgQnV5IFNpZ25hbDogRmFzdCBTTUEgKCR7ZmFzdFNNQVtsYXN0XS50b0ZpeGVkKDIpfSkgY3Jvc3NlZCBhYm92ZSBTbG93IFNNQSAoJHtzbG93U01BW2xhc3RdLnRvRml4ZWQoMil9KWBcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gU2VsbCBzaWduYWw6IEZhc3QgU01BIGNyb3NzZXMgYmVsb3cgU2xvdyBTTUFcbiAgICAgIGlmIChmYXN0U01BW3ByZXZdID49IHNsb3dTTUFbcHJldl0gJiYgZmFzdFNNQVtsYXN0XSA8IHNsb3dTTUFbbGFzdF0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0eXBlOiAnc2VsbCcsXG4gICAgICAgICAgcHJpY2U6IGRhdGFbbGFzdF0uY2xvc2UsXG4gICAgICAgICAgdGltZTogdHlwZW9mIGRhdGFbbGFzdF0udGltZSA9PT0gJ251bWJlcicgPyBkYXRhW2xhc3RdLnRpbWUgOiBNYXRoLmZsb29yKG5ldyBEYXRlKGRhdGFbbGFzdF0udGltZSkuZ2V0VGltZSgpIC8gMTAwMCksXG4gICAgICAgICAgbWVzc2FnZTogYFNlbGwgU2lnbmFsOiBGYXN0IFNNQSAoJHtmYXN0U01BW2xhc3RdLnRvRml4ZWQoMil9KSBjcm9zc2VkIGJlbG93IFNsb3cgU01BICgke3Nsb3dTTUFbbGFzdF0udG9GaXhlZCgyKX0pYFxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG59OyAiXSwibmFtZXMiOlsiY2FsY3VsYXRlU01BIiwiZGF0YSIsInBlcmlvZCIsInNtYSIsImkiLCJwdXNoIiwiTmFOIiwibGVuZ3RoIiwic3VtIiwiaiIsInNtYUNyb3Nzb3ZlclN0cmF0ZWd5IiwiaWQiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJpbmRpY2F0b3JzIiwiYW5hbHl6ZSIsInByaWNlcyIsIm1hcCIsImQiLCJjbG9zZSIsImZhc3RTTUEiLCJzbG93U01BIiwibGFzdCIsInByZXYiLCJpc05hTiIsInR5cGUiLCJwcmljZSIsInRpbWUiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwiZ2V0VGltZSIsIm1lc3NhZ2UiLCJ0b0ZpeGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/strategies/sma-crossover.ts\n"));

/***/ })

});